[event]
	name=generate dungeon
	{IF_VAR dungeon_creation.temp.restore_flag equals 0 (
		[then]
			{VARIABLE dungeon_level.old $dungeon_level.current}
			{RANDOM "0..4"}
			{IF_VAR random equals 0 (
				[then]
					[replace_map]
						map="{~add-ons/Wesband/maps/dungeon_template_40x60.map}"
						expand=yes
						shrink=yes
					[/replace_map]
					[set_variables]
						name=current_dungeon_template
						mode=replace
						[literal]
							x=40
							y=60
						[/literal]
					[/set_variables]
				[/then]
				[else]
					{IF_VAR random equals 4 (
						[then]
							[replace_map]
								map="{~add-ons/Wesband/maps/dungeon_template_60x40.map}"
								expand=yes
								shrink=yes
							[/replace_map]
							[set_variables]
								name=current_dungeon_template
								mode=replace
								[literal]
									x=60
									y=40
								[/literal]
							[/set_variables]
						[/then]
						[else]
							[set_variables]
								name=current_dungeon_template
								mode=replace
								[literal]
									x=50
									y=50
								[/literal]
							[/set_variables]
						[/else]
					)}
				[/else]
			)}
			{CLEAR_VARIABLE random}
			[lua]
				code=<<
					wesnoth.dofile "~add-ons/Wesband/lua/DungeonUpdate.lua"
					wesnoth.dofile "~add-ons/Wesband/lua/DungeonArchitecture.lua"
					wesnoth.dofile "~add-ons/Wesband/lua/DungeonThemes.lua"
					wesnoth.dofile "~add-ons/Wesband/lua/DungeonTerrain.lua"
				>>
			[/lua]
		[/then]
		[else]
			{IF_VAR current_dungeon_template.x equals 40 (
				[then]
					[replace_map]
						map="{~add-ons/Wesband/maps/dungeon_template_40x60.map}"
						expand=yes
						shrink=yes
					[/replace_map]
				[/then]
				[else]
					{IF_VAR current_dungeon_template.x equals 60 (
						[then]
							[replace_map]
								map="{~add-ons/Wesband/maps/dungeon_template_60x40.map}"
								expand=yes
								shrink=yes
							[/replace_map]
						[/then]
					)}
				[/else]
			)}
			{FOREACH dungeon_locs i}
				[terrain]
					x,y=$dungeon_locs[$i].x,$dungeon_locs[$i].y
					terrain=$dungeon_locs[$i].terrain
				[/terrain]
			{NEXT i}
			{VARIABLE trapdoor_down.x $old_trapdoor_down_x}
			{VARIABLE trapdoor_down.y $old_trapdoor_down_y}
			{VARIABLE trapdoor_up.x $old_trapdoor_up_x}
			{VARIABLE trapdoor_up.y $old_trapdoor_up_y}
			[item]
				x=$trapdoor_down.x
				y=$trapdoor_down.y
				image="scenery/trapdoor-open.png"
				visible_in_fog=yes
			[/item]
			[item]
				x=$trapdoor_up.x
				y=$trapdoor_up.y
				image="stairs-up.png"
				visible_in_fog=yes
			[/item]
			{FOREACH ground_items i}
				[set_variables]
					name=ground_$ground_items[$i].x|_$ground_items[$i].y|.items
					to_variable=ground_items[$i]
					mode=append
				[/set_variables]
				[item]
					x=$ground_items[$i].x
					y=$ground_items[$i].y
					image=items/$ground_items[$i].ground_icon|.png
					visible_in_fog=no
				[/item]
			{NEXT i}
			{CLEAR_VARIABLE ground_items}

			# restore user-visible team names
			{VARIABLE i $const.max_player_count}
			{VARIABLE j 0}
			[while]
				[variable]
					name=i
					less_than="$($const.max_player_count+$const.max_enemy_count)"
				[/variable]
				[do]
					{VARIABLE_OP i add 1}
					[modify_side]
						side=$i
						team_name=$dungeon_creation.alliances.$dungeon_creation.active_themes[$j].theme
						user_team_name=$dungeon_sides[$j].user_team_name
					[/modify_side]
					{VARIABLE_OP j add 1}
				[/do]
			[/while]
			{CLEAR_VARIABLE i,j}
		[/else]
	)}
[/event]

[event]
	name=place characters

	# no longer possible to enter dungeon level by down exit, so just move players to up exit
	{FIRE_EVENT "fix units"}
	{VARIABLE s 0}
	[while]
		[variable]
			name=s
			less_than=$const.max_player_count
		[/variable]
		[do]
			{VARIABLE_OP s add 1}
			[if]
				[have_unit]
					side=$s
				[/have_unit]
				[then]
					{TELEPORT_UNIT side=$s $trapdoor_up.x $trapdoor_up.y}
					[recall]
						side=$s
					[/recall]
					[recall]
						side=$s
					[/recall]
					[while]
						[have_unit]
							side=$s
							movement_cost=99
						[/have_unit]
						[do]
							{TELEPORT_UNIT (
									side=$s
									movement_cost=99
								) $trapdoor_up.x $trapdoor_up.y}
						[/do]
					[/while]
				[/then]
			[/if]
		[/do]
	[/while]
	
	{IF_VAR dungeon_creation.temp.restore_flag equals 0 (
		[then]
			[while]
				[variable]
					name=s
					greater_than=0
				[/variable]
				[do]
					[place_shroud]
						side=$s
						x=1-$current_dungeon_template.x
						y=1-$current_dungeon_template.y
					[/place_shroud]
					{VARIABLE_OP s sub 1}
				[/do]
			[/while]
		[/then]
		[else]
			[while]
				[variable]
					name=s
					greater_than=0
				[/variable]
				[do]
					[set_shroud]
						side=$s
						shroud_data=$shroud_data
					[/set_shroud]
					{VARIABLE_OP s sub 1}
				[/do]
			[/while]
		[/else]
	)}
	{CLEAR_VARIABLE s,shroud_data}
[/event]

[event]
	name=populate dungeon

	{IF_VAR dungeon_creation.temp.restore_flag equals 0 (
		[then]
			[lua]
				code=<<wesnoth.dofile "~add-ons/Wesband/lua/DungeonPopulation.lua">>
			[/lua]
		[/then]
		[else]
			# re-section off opposing sides of the dungeon to put the mobs so they won't all
			# just be attacking each other all the time
			{VARIABLE_OP dungeon_creation.temp.divide_direction rand x,y}
			{VARIABLE_OP dungeon_creation.temp.mob_divide_high rand 0..10}
			{VARIABLE_OP dungeon_creation.temp.mob_divide_high add "$($current_dungeon_template.$dungeon_creation.temp.divide_direction||/2)"}
			{VARIABLE dungeon_creation.temp.mob_divide_low $dungeon_creation.temp.mob_divide_high}
			{VARIABLE_OP dungeon_creation.temp.mob_divide_low sub 5}
			{VARIABLE_OP dungeon_creation.temp.divide_order_first rand 1,2}
			{VARIABLE dungeon_creation.temp.areas[0].min_x 1}
			{VARIABLE dungeon_creation.temp.areas[0].max_x $current_dungeon_template.x}
			{VARIABLE dungeon_creation.temp.areas[0].min_y 1}
			{VARIABLE dungeon_creation.temp.areas[0].max_y $current_dungeon_template.y}
			{VARIABLE dungeon_creation.temp.areas[1].min_x 1}
			{VARIABLE dungeon_creation.temp.areas[1].max_x $current_dungeon_template.x}
			{VARIABLE dungeon_creation.temp.areas[1].min_y 1}
			{VARIABLE dungeon_creation.temp.areas[1].max_y $current_dungeon_template.y}
			[if]
				[variable]
					name=dungeon_creation.temp.divide_order_first
					equals=1
				[/variable]
				[then]
					{VARIABLE dungeon_creation.temp.areas[0].max_$dungeon_creation.temp.divide_direction $dungeon_creation.temp.mob_divide_low}
					{VARIABLE dungeon_creation.temp.areas[1].min_$dungeon_creation.temp.divide_direction $dungeon_creation.temp.mob_divide_high}
				[/then]
				[else]
					{VARIABLE dungeon_creation.temp.areas[1].max_$dungeon_creation.temp.divide_direction $dungeon_creation.temp.mob_divide_low}
					{VARIABLE dungeon_creation.temp.areas[0].min_$dungeon_creation.temp.divide_direction $dungeon_creation.temp.mob_divide_high}
				[/else]
			[/if]
			{FOREACH dungeon_clusters i}
				[switch]
					variable=dungeon_clusters[$i].mob[0].side
					[case]
						value="$(1+$const.max_player_count)"
						[store_locations]
							x=$dungeon_creation.temp.areas[0].min_x|-$dungeon_creation.temp.areas[0].max_x|
							y=$dungeon_creation.temp.areas[0].min_y|-$dungeon_creation.temp.areas[0].max_y|
							find_in=chamber_terrain
							[not]
								radius=2
								[filter]
								[/filter]
							[/not]
							variable=dungeon_creation.temp.active_area
						[/store_locations]
					[/case]
					[case]
						value="$(2+$const.max_player_count)"
						[store_locations]
							x=$dungeon_creation.temp.areas[1].min_x|-$dungeon_creation.temp.areas[1].max_x|
							y=$dungeon_creation.temp.areas[1].min_y|-$dungeon_creation.temp.areas[1].max_y|
							find_in=chamber_terrain
							[not]
								radius=2
								[filter]
								[/filter]
							[/not]
							variable=dungeon_creation.temp.active_area
						[/store_locations]
					[/case]
					[else]
						{VARIABLE dungeon_creation.temp.cluster_theme "$($dungeon_clusters[$i].mob[0].side|-1-$const.max_player_count)"}
						[if]
							[variable]
								name=dungeon_creation.active_themes[$dungeon_creation.temp.cluster_theme].theme
								equals=water
							[/variable]
							[then]
								[store_locations]
									x=1-$current_dungeon_template.x
									y=1-$current_dungeon_template.y
									terrain=Ww,Ss
									[not]
										[filter]
										[/filter]
									[/not]
									variable=dungeon_creation.temp.active_area
								[/store_locations]
							[/then]
							[else]
								[store_locations]
									x=1-$current_dungeon_template.x
									y=1-$current_dungeon_template.y
									find_in=chamber_terrain
									[not]
										radius=2
										[filter]
										[/filter]
									[/not]
									variable=dungeon_creation.temp.active_area
								[/store_locations]
							[/else]
						[/if]
					[/else]
				[/switch]
				{RANDOM 1..$dungeon_creation.temp.active_area.length}
				{VARIABLE_OP random sub 1}
				{VARIABLE dungeon_creation.temp.mob_x $dungeon_creation.temp.active_area[$random].x}
				{VARIABLE dungeon_creation.temp.mob_y $dungeon_creation.temp.active_area[$random].y}
				{FOREACH dungeon_clusters[$i].mob j}
					{VARIABLE dungeon_clusters[$i].mob[$j].moves $dungeon_clusters[$i].mob[$j].max_moves}
					{VARIABLE dungeon_clusters[$i].mob[$j].attacks_left 1}
					{VARIABLE dungeon_clusters[$i].mob[$j].variables.simple_action 1}
					{VARIABLE dungeon_clusters[$i].mob[$j].status.petrified "yes"}
					{VARIABLE dungeon_clusters[$i].mob[$j].status.guardian "yes"}
					[unstore_unit]
						variable=dungeon_clusters[$i].mob[$j]
						x,y=1,1
					[/unstore_unit]
					{TELEPORT_TILE 1 1 $dungeon_creation.temp.mob_x $dungeon_creation.temp.mob_y}
				{NEXT j}
			{NEXT i}
			{CLEAR_VARIABLE dungeon_clusters}
		[/else]
	)}
[/event]

[event]
	name=entrance rousing

	[store_unit]
		[filter]
			side=$const.player_sides
		[/filter]
		variable=rousers
	[/store_unit]
	{FOREACH rousers r}
		{FIRE_COMPLEX "rousing" (
			[primary_unit]
				x,y=$rousers[$r].x,$rousers[$r].y
			[/primary_unit]
		)}
	{NEXT r}
	{CLEAR_VARIABLE rousers}
[/event]