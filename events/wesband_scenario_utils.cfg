#item gain if enemy killed has item and killer is enemy
[event]
    name=die
    first_time_only=no
    [filter]
        side=4,5,6,7,8,9
    [/filter]
    [if]
        [variable]
            name=second_unit.side
            greater_than=3
        [/variable]
        [then]
			[if]
				[variable]
	                name=unit.variables.inventory.length
	                greater_than=0
	            [/variable]
				[then]
		            {NPC_EVAL_EQUIPMENT $x2|,$y2|}
					{FOREACH unit.variables.inventory.usables o}
						{VARIABLE path "unit.variables.inventory.usables[$o]"}
						[store_unit]
							variable=npc_temp
							[filter]
								x,y=$x2|,$y2|
							[/filter]
						[/store_unit]
						[fire_event]
							name=npc_eval_usable
						[/fire_event]
						{DROP_UNWANTED}
					{NEXT o}
				[/then]
			[/if]
			[if]
				[variable]
					name=unit.personal_gold
					greater_than=0
				[/variable]
				[then]
					[store_unit]
						variable=npc_temp
						[filter]
							x,y=$x2|,$y2|
						[/filter]
					[/store_unit]
					[if]
						{LIKES_GOLD}
						[then]
							{VARIABLE_OP second_unit.personal_gold add $unit.personal_gold}
				            [unstore_unit]
				                variable=second_unit
				                text=$unit.personal_gold
				                red=255
				                green=215
				            [/unstore_unit]
						[/then]
						[else]
							{DROP_GOLD unit.personal_gold $x1| $y1|}
						[/else]
					[/if]
					[sound]
					    name=gold.ogg
					[/sound]
				[/then]
			[/if]
        [/then]
		[else]
			{DROP_INVENTORY}
			[if]
				[variable]
					name=unit.personal_gold
					greater_than=0
				[/variable]
				[then]
					[sound]
					    name=gold.ogg
					[/sound]
				[/then]
			[/if]
		[/else]
    [/if]
[/event]

#find if last enemy, then cleared
[event]
    name=die
    first_time_only=no
    [filter]
        side=4,5,6,7,8,9
    [/filter]
    [if]
        [have_unit]
            side=4,5,6,7,8,9
        [/have_unit]
        [then]
        [/then]
        [else]
			{VARIABLE_OP dungeon_level.max add 1}
			{VARIABLE just_passed 1}
			{VARIABLE current_level_cleared 1}
			{RANDOM 0..1}
			[switch]
				variable=random
				[case]
					value=0
					[music]
						name=victory.ogg
						play_once=yes
						immediate=yes
					[/music]
				[/case]
				[else]
					[music]
						name=victory2.ogg
						play_once=yes
						immediate=yes
					[/music]
				[/else]
			[/switch]
			[unstore_unit]
				variable=second_unit
				text=_ "level cleared"
				red=255
				green=215
			[/unstore_unit]
			[store_unit]
				[filter]
					side=1,2,3
				[/filter]
				variable=clear_heal
			[/store_unit]
			{FOREACH clear_heal i}
				#for any objects
				[object]
					[filter]
						x,y=$clear_heal[$i].x,$clear_heal[$i].y
					[/filter]
					silent=yes
					[effect]
						apply_to=hitpoints
						heal_full=yes
					[/effect]
					[effect]
						apply_to=status
						remove=poisoned
					[/effect]
				[/object]
				#for directly applied variables
				[store_unit]
					[filter]
						x,y=$clear_heal[$i].x,$clear_heal[$i].y
					[/filter]
					variable=clear_mana
				[/store_unit]
				[if]
					[variable]
						name=clear_mana[$i].variables.attributes.magic_casting.max_mana
						greater_than=0
					[/variable]
					[then]
						{VARIABLE clear_mana[$i].variables.abilities.magic_casting.mana $clear_mana[$i].variables.abilities.magic_casting.max_mana}
						{VARIABLE clear_mana[$i].modifications.trait[0].name "mana: $clear_mana[$i].variables.abilities.magic_casting.mana|/$clear_mana[$i].variables.abilities.magic_casting.max_mana|"}
					[/then]
				[/if]
				[unstore_unit]
					variable=clear_mana
				[/unstore_unit]
			{NEXT i}
			{CLEAR_VARIABLE clear_heal}
			{CLEAR_VARIABLE clear_mana}
			[modify_side]
				side=1
				fog=no
				shroud=no
			[/modify_side]
			[modify_side]
				side=2
				fog=no
				shroud=no
			[/modify_side]
			[modify_side]
				side=3
				fog=no
				shroud=no
			[/modify_side]
			{CLEAR_EXIT_LOCS}
        [/else]
    [/if]
[/event]

#handle units with armor or weapons
[event]
    name=post_advance
    first_time_only=no
    [filter]
        [not]
			canrecruit=yes
		[/not]
    [/filter]
	[if]
		[variable]
			name=unit.variables.inventory.length
			greater_than=0
		[/variable]
		[then]
			[store_unit]
                variable=npc_temp
                [filter]
                    x,y=$x1|,$y1|
                [/filter]
            [/store_unit]
			{FOREACH npc_temp.attack a}
				[if]
					[variable]
						name=npc_temp.attack[$a].is_rpg_weapon
						greater_than=0
					[/variable]
					[then]
						{CLEAR_VARIABLE npc_temp.attack[$a]}
						{VARIABLE_OP a add -1}
					[/then]
				[/if]
			{NEXT a}
			{CLEAR_ARMOR}
			{CLEAR_VARIABLE npc_temp.variables.inventory}
			{CLEAR_VARIABLE npc_temp.variables.terrain.flat.defense}
			[unstore_unit]
				variable=npc_temp
			[/unstore_unit]
			{NPC_EVAL_EQUIPMENT $x1|,$y1|}
			#probably don't need to use consumables after leveling, so just store them again
			[store_unit]
                variable=npc_temp
                [filter]
                    x,y=$x1|,$y1|
                [/filter]
            [/store_unit]
			[set_variables]
				name=npc_temp.variables.inventory.usables
				mode=replace
				to_variable=unit.variables.inventory.usables
			[/set_variables]
			[unstore_unit]
				variable=npc_temp
			[/unstore_unit]
		[/then]
	[/if]
[/event]

[event]
    name=post_advance
    first_time_only=no
    [filter]
        [filter_wml]
            [not]
                upkeep=0
            [/not]
        [/filter_wml]
    [/filter]
    {VARIABLE unit.upkeep 0}
    [unstore_unit]
        variable=unit
    [/unstore_unit]
[/event]

#no longer different inventory structures for hench/pc
[event]
    name=die
    first_time_only=no
    [filter]
        side=1,2,3
    [/filter]
	{DROP_INVENTORY}
	[if]
		[variable]
			name=unit.personal_gold
			greater_than=0
		[/variable]
		[then]
			[sound]
			    name=gold.ogg
			[/sound]
		[/then]
	[/if]
[/event]

#pick up item if enemy npc moves to it
[event]
    name=moveto
    first_time_only=no
    [allow_undo]
    [/allow_undo]
    [filter]
        side=4,5,6,7,8,9
    [/filter]
    [if]
        [variable]
            name=ground_$x1|_$y1|.items.length
            greater_than=0
        [/variable]
        [then]
            {VARIABLE ground_changed 0}
            {FOREACH_COLLAPSE ground_$x1|_$y1|.items o}
                {VARIABLE path ground_$x1|_$y1|.items[$o]}
                [store_unit]
                    variable=npc_temp
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                [/store_unit]
                [fire_event]
                    name=eval_npc
                [/fire_event]
                [if]
                    [variable]
                        name=will_carry
                        numerical_equals=1
                    [/variable]
                    [then]
						[removeitem]
							x,y=$x1,$y1
							image=items/$ground_$x1|_$y1|.items[$o].ground_icon|.png
						[/removeitem]
                        {CLEAR_VARIABLE "ground_$x1|_$y1|.items[$o]"}
                        {VARIABLE ground_changed 1}
                    [/then]
                [/if]
            {NEXT_COLLAPSE o}
            [if]
                [variable]
                    name=ground_changed
                    numerical_equals=1
                [/variable]
				[and]
					[variable]
                        name="ground_$x1|_$y1|.items.length"
                        greater_than=0
                    [/variable]
				[/and]
                [then]
                    {FOREACH ground_$x1|_$y1|.items i}
                        [item]
                            x=$x1
                            y=$y1
                            image=items/$ground_$x1|_$y1|.items[$i].ground_icon|.png
							visible_in_fog=no
                        [/item]
                    {NEXT i}
                [/then]
            [/if]
			{VARIABLE ground_changed 0}
        [/then]
    [/if]
[/event]
#may want way for henches to pick up item

#this makes sure no units have upkeep, really there only because of plague


#add to main undead minions if not above $max_hench
[event]
	name=side turn
	first_time_only=no
	[if]
		[variable]
			name=side_number
			less_than=4
		[/variable]
		[then]
			[store_unit]
	            [filter]
					side=1,2,3
	                canrecruit=yes
	            [/filter]
	            variable=hench_num_query
	        [/store_unit]
			[if]
				[variable]
					name=hench_num_query.length
					numerical_equals=1
				[/variable]
				[then]
					{VARIABLE max_hench 2}
				[/then]
				[else]
					{VARIABLE max_hench 1}
				[/else]
			[/if]
			{CLEAR_VARIABLE hench_num_query}
			[store_unit]
				variable=undead_query
				[filter]
					side=$side_number
					race=undead
					[not]
						canrecruit=yes
					[/not]
					[filter_wml]
						[not]
							is_hench=1
						[/not]
					[/filter_wml]
				[/filter]
			[/store_unit]
			[store_unit]
				variable=hench_query
				[filter]
					side=$side_number
					[not]
						canrecruit=yes
					[/not]
					[filter_wml]
						is_hench=1
					[/filter_wml]
				[/filter]
			[/store_unit]
			{VARIABLE hench_number $hench_query.length}
			{FOREACH undead_query i}
				[if]
					[variable]
						name=hench_number
						greater_than_equal_to=$max_hench
					[/variable]
					[then]
						#degrade those not part of main group, kill if below 1 hp
						[if]
							[variable]
								name=undead_query[$i].max_hitpoints
								greater_than=$undead_query[$i].stored_max_hitpoints
							[/variable]
							[then]
								{VARIABLE undead_query[$i].stored_max_hitpoints $undead_query[$i].max_hitpoints}
							[/then]
						[/if]
						{VARIABLE_OP undead_query[$i].max_hitpoints add -6}
						[if]
							[variable]
								name=undead_query[$i].max_hitpoints
								less_than=$undead_query[$i].hitpoints
							[/variable]
							[then]
								{VARIABLE undead_query[$i].hitpoints $undead_query[$i].max_hitpoints}
							[/then]
						[/if]
						{VARIABLE undead_query[$i].upkeep 0}
						[sound]
							name={SOUND_LIST:ZOMBIE_HIT}
						[/sound]
						[unstore_unit]
							variable=undead_query[$i]
							text=-6
							{COLOR_HARM}
						[/unstore_unit]
						[if]
							[variable]
								name=undead_query[$i].hitpoints
								less_than=1
							[/variable]
							[then]
								[kill]
		                            x,y=$undead_query[$i].x,$undead_query[$i].y
		                            animate=yes
		                        [/kill]
							[/then]
						[/if]
					[/then]
					[else]
						#add to main undead minions
						{VARIABLE undead_query[$i].is_hench 1}
						{VARIABLE undead_query[$i].overlays "misc/hero-icon.png"}
						{VARIABLE undead_query[$i].upkeep 0}
						{VARIABLE_OP hench_number add 1}
						[if]
							[variable]
								name=undead_query[$i].max_hitpoints
								less_than=$undead_query[$i].stored_max_hitpoints
							[/variable]
							[then]
								{VARIABLE undead_query[$i].max_hitpoints $undead_query[$i].stored_max_hitpoints}
							[/then]
						[/if]
						[unstore_unit]
							variable=undead_query[$i]
						[/unstore_unit]
					[/else]
				[/if]
			{NEXT i}
			#decrease exp from summons
			[store_unit]
				variable=summon_query
				[filter]
					side=$side_number
					[not]
						canrecruit=yes
					[/not]
					[filter_wml]
						is_summon=1
					[/filter_wml]
				[/filter]
			[/store_unit]
			{FOREACH summon_query i}
				{VARIABLE_OP summon_query[$i].experience add -2}
				[if]
					[variable]
						name=summon_query[$i].experience
						greater_than=-1
					[/variable]
					[then]
						[unstore_unit]
							variable=summon_query[$i]
						[/unstore_unit]
					[/then]
					[else]
						[kill]
							x,y=$summon_query[$i].x,$summon_query[$i].y
							animate=yes
						[/kill]
					[/else]
				[/if]
			{NEXT i}
			{CLEAR_VARIABLE summon_query}
		[/then]
	[/if]
[/event]

#rest if no enemies near, recover 1 mana otherwise
[event]
    name=side turn
    first_time_only=no
    [store_unit]
        [filter]
            side=$side_number
        [/filter]
        variable=rest_unit
    [/store_unit]
	{FOREACH rest_unit i}
		[if]
			[variable]
				name=side_number
				less_than=4
			[/variable]
			[then]
				[if]
					[have_unit]
						side=4,5,6,7,8,9
						[filter_location]
							x,y=$rest_unit[$i].x,$rest_unit[$i].y
							radius=12
						[/filter_location]
					[/have_unit]
					[or]
						[variable]
							name=rest_unit[$i].status.poisoned
							equals=yes
						[/variable]
					[/or]
					[then]
						[if]
							[variable]
								name=rest_unit[$i].variables.abilities.magic_casting.max_mana
								greater_than=0
							[/variable]
							[and]
								[variable]
									name=rest_unit[$i].variables.abilities.magic_casting.max_mana
									greater_than=$rest_unit[$i].variables.abilities.magic_casting.mana
								[/variable]
							[/and]
							[then]
								{VARIABLE_OP rest_unit[$i].variables.abilities.magic_casting.mana add 1}
								{VARIABLE rest_unit[$i].modifications.trait[0].name "mana: $rest_unit[$i].variables.abilities.magic_casting.mana|/$rest_unit[$i].variables.abilities.magic_casting.max_mana|"}
								[unstore_unit]
									variable=rest_unit[$i]
								[/unstore_unit]
							[/then]
						[/if]
					[/then]
					[else]
						[if]
							[variable]
								name=rest_unit[$i].variables.abilities.magic_casting.max_mana
								greater_than=0
							[/variable]
							[then]
								[if]
									[variable]
										name=rest_unit[$i].variables.abilities.magic_casting.mana
										less_than=$rest_unit[$i].variables.abilities.magic_casting.max_mana
									[/variable]
									[then]
										{VARIABLE rest_unit[$i].variables.abilities.magic_casting.mana $rest_unit[$i].variables.abilities.magic_casting.max_mana}
										{VARIABLE rest_unit[$i].modifications.trait[0].name "mana: $rest_unit[$i].variables.abilities.magic_casting.mana|/$rest_unit[$i].variables.abilities.magic_casting.max_mana|"}
										{VARIABLE rest_unstore_flag 1}
									[/then]
								[/if]
							[/then]
						[/if]
						[if]
							[variable]
								name=rest_unit[$i].hitpoints
								less_than=$rest_unit[$i].max_hitpoints
							[/variable]
							[then]
								[sound]
									name=heal.wav
								[/sound]
								{VARIABLE rest_unit[$i].hitpoints $rest_unit[$i].max_hitpoints}
								{VARIABLE rest_unstore_flag 1}
							[/then]
						[/if]
						[if]
							[variable]
								name=rest_unstore_flag
								numerical_equals=1
							[/variable]
							[then]
								[unstore_unit]
									variable=rest_unit[$i]
									text=_ "rested"
									{COLOR_HEAL}
								[/unstore_unit]
								{VARIABLE rest_unstore_flag 0}
							[/then]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
		[if]
			[variable]
				name=side_number
				greater_than=3
			[/variable]
			[then]
				#rouse nearby enemies, not sure if this is the best place like this
				[if]
					[variable]
						name=rest_unit[$i].status.stoned
						boolean_not_equals=on
					[/variable]
					[then]
						[store_unit]
							[filter]
								side=4,5,6,7,8,9
								[filter_location]
									x,y=$rest_unit[$i].x,$rest_unit[$i].y
									radius=4
								[/filter_location]
								[wml_filter]
									[status]
										stoned=on
									[/status]
								[/wml_filter]
							[/filter]
							variable=rouse_close
							kill=no
						[/store_unit]
						{FOREACH rouse_close o}
							{CLEAR_VARIABLE rouse_close[$o].status.stoned}
							[unstore_unit]
								variable=rouse_close[$o]
							[/unstore_unit]
						{NEXT o}
						{CLEAR_VARIABLE rouse_close}
					[/then]
				[/if]
				[if]
					[have_unit]
						side=1,2,3
						[filter_location]
							x,y=$rest_unit[$i].x,$rest_unit[$i].y
							radius=12
						[/filter_location]
					[/have_unit]
					[or]
						[variable]
							name=rest_unit[$i].status.poisoned
							equals=yes
						[/variable]
					[/or]
					[then]
						
					[/then]
					[else]
						[if]
							[variable]
								name=rest_unit[$i].hitpoints
								less_than=$rest_unit[$i].max_hitpoints
							[/variable]
							[then]
								{VARIABLE rest_unit[$i].hitpoints $rest_unit[$i].max_hitpoints}
								[unstore_unit]
									variable=rest_unit[$i]
								[/unstore_unit]
							[/then]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE rest_unit,rest_unstore_flag,target_unit}
[/event]

#rouse close enemies
[event]
    name=moveto
    first_time_only=no
    [allow_undo]
    [/allow_undo]
    [filter]
        side=1,2,3
    [/filter]
    [if]
        [have_unit]
            side=4,5,6,7,8,9
            [filter_location]
                x,y=$unit.x,$unit.y
                radius=13
            [/filter_location]
			[wml_filter]
				[status]
					stoned=on
				[/status]
			[/wml_filter]
        [/have_unit]
        [then]
            [store_unit]
                [filter]
                    side=4,5,6,7,8,9
                    [filter_location]
                        x,y=$unit.x,$unit.y
                        radius=13
                    [/filter_location]
                [/filter]
                variable=roused
                kill=no
            [/store_unit]
            {FOREACH roused i}
                {CLEAR_VARIABLE roused[$i].status.stoned}
                [unstore_unit]
                    variable=roused[$i]
                [/unstore_unit]
            {NEXT i}
        [/then]
    [/if]
[/event]

#refresh movement if no enemies near
[event]
    name=moveto
    first_time_only=no
    [allow_undo]
    [/allow_undo]
    [filter]
        side=1,2,3
    [/filter]
    [if]
        [have_unit]
            side=4,5,6,7,8,9
            [filter_location]
                x,y=$x1,$y1
                radius=15
            [/filter_location]
        [/have_unit]
        [then]
        [/then]
        [else]
            [if]
                [variable]
                    name=unit.simple_action
                    numerical_equals=0
                [/variable]
                [or]
                    [variable]
                        name=unit.attacks_left
                        numerical_equals=0
                    [/variable]
                [/or]
                [then]
                [/then]
                [else]
                    {VARIABLE unit.moves $unit.max_moves}
                    [unstore_unit]
                        variable=unit
                    [/unstore_unit]
                [/else]
            [/if]
        [/else]
    [/if]
[/event]

#puts real stats into leader units, maybe not needed anymore
[event]
    name=start
    first_time_only=no
	
	[store_unit]
		[filter]
			side=4,5,6,7,8,9
			canrecruit=yes
		[/filter]
		variable=temp_lich
		kill=yes
	[/store_unit]
	{CLEAR_VARIABLE temp_lich}
	
    [if]
        [variable]
            name=please_refresh
            numerical_equals=1
        [/variable]
        [then]
            [store_unit]
                [filter]
                    side=1
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_1_leader_old
            [/store_unit]
			[store_unit]
                [filter]
                    side=2
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_2_leader_old
            [/store_unit]
			[store_unit]
                [filter]
                    side=3
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_3_leader_old
            [/store_unit]
			{FOREACH player_leader l}
				[switch]
					variable=player_leader[$l].side
					[case]
						value=1
						{VARIABLE player_leader[$l].x $side_1_leader_old.x}
			            {VARIABLE player_leader[$l].y $side_1_leader_old.y}
			            {VARIABLE player_leader[$l].attacks_left 1}
			            {VARIABLE player_leader[$l].moves $player_leader[$l].max_moves}
						{VARIABLE player_leader[$l].simple_action 1}
			            [unstore_unit]
			                variable=player_leader[$l]
							find_vacant=yes
			            [/unstore_unit]
						[if]
							[variable]
								name=side_1_hench.length
								greater_than=0
							[/variable]
							[then]
					            {FOREACH side_1_hench i}
					                {VARIABLE side_1_hench[$i].x $side_1_leader_old.x}
					                {VARIABLE side_1_hench[$i].y $side_1_leader_old.y}
									{VARIABLE side_1_hench[$i].moves $side_1_hench[$i].max_moves}
									{VARIABLE side_1_hench[$i].attacks_left 1}
									{VARIABLE side_1_hench[$i].simple_action 1}
					                [unstore_unit]
					                    variable=side_1_hench[$i]
					                    find_vacant=yes
					                [/unstore_unit]
					            {NEXT i}
							[/then]
						[/if]
					[/case]
					[case]
						value=2
						{VARIABLE player_leader[$l].x $side_2_leader_old.x}
			            {VARIABLE player_leader[$l].y $side_2_leader_old.y}
			            {VARIABLE player_leader[$l].attacks_left 1}
			            {VARIABLE player_leader[$l].moves $player_leader[$l].max_moves}
						{VARIABLE player_leader[$l].simple_action 1}
			            [unstore_unit]
			                variable=player_leader[$l]
							find_vacant=yes
			            [/unstore_unit]
			            [if]
							[variable]
								name=side_2_hench.length
								greater_than=0
							[/variable]
							[then]
					            {FOREACH side_2_hench i}
					                {VARIABLE side_2_hench[$i].x $side_2_leader_old.x}
					                {VARIABLE side_2_hench[$i].y $side_2_leader_old.y}
									{VARIABLE side_2_hench[$i].moves $side_2_hench[$i].max_moves}
									{VARIABLE side_2_hench[$i].attacks_left 1}
									{VARIABLE side_2_hench[$i].simple_action 1}
					                [unstore_unit]
					                    variable=side_2_hench[$i]
					                    find_vacant=yes
					                [/unstore_unit]
					            {NEXT i}
							[/then]
						[/if]
					[/case]
					[case]
						value=3
						{VARIABLE player_leader[$l].x $side_3_leader_old.x}
			            {VARIABLE player_leader[$l].y $side_3_leader_old.y}
			            {VARIABLE player_leader[$l].attacks_left 1}
			            {VARIABLE player_leader[$l].moves $player_leader[$l].max_moves}
						{VARIABLE player_leader[$l].simple_action 1}
			            [unstore_unit]
			                variable=player_leader[$l]
							find_vacant=yes
			            [/unstore_unit]
			            [if]
							[variable]
								name=side_3_hench.length
								greater_than=0
							[/variable]
							[then]
					            {FOREACH side_3_hench i}
					                {VARIABLE side_3_hench[$i].x $side_3_leader_old.x}
					                {VARIABLE side_3_hench[$i].y $side_3_leader_old.y}
									{VARIABLE side_3_hench[$i].moves $side_3_hench[$i].max_moves}
									{VARIABLE side_3_hench[$i].attacks_left 1}
									{VARIABLE side_3_hench[$i].simple_action 1}
					                [unstore_unit]
					                    variable=side_3_hench[$i]
					                    find_vacant=yes
					                [/unstore_unit]
					            {NEXT i}
							[/then]
						[/if]
					[/case]
				[/switch]
			{NEXT l}

            #need to clear wall/lava/chasm if there's a unit on it
            [store_locations]
                variable=walls
                [filter]
                [/filter]
            [/store_locations]
            {FOREACH walls i}
                [if]
                    [variable]
                        name=walls[$i].terrain
                        equals=Xos
                    [/variable]
                    [or]
                        [variable]
                            name=walls[$i].terrain
                            equals=Qxu
                        [/variable]
                    [/or]
                    [or]
                        [variable]
                            name=walls[$i].terrain
                            equals=Ql
                        [/variable]
                    [/or]
                    [or]
                        [variable]
                            name=walls[$i].terrain
                            equals=Qlf
                        [/variable]
                    [/or]
                    [or]
                        [variable]
                            name=walls[$i].terrain
                            equals=Xu
                        [/variable]
                    [/or]
                    [then]
                        {MODIFY_TERRAIN "Uu" $walls[$i].x $walls[$i].y}
                    [/then]
                [/if]
            {NEXT i}

            {CLEAR_VARIABLE player_leader,side_1_leader_old,side_2_leader_old,side_3_leader_old,side_1_hench,side_2_hench,side_3_hench}
        [/then]
    [/if]
    [redraw]
    [/redraw]
[/event]