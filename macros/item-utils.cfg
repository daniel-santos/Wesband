#define STANDARD_CONSUMABLE_USE UNIT
	{EXPEND_CONSUMABLE {UNIT}.variables.inventory.usables[$item_id]}
#enddef

#define POTION_HEALING_SETUP
	{VARIABLE healing_number $current_unit.variables.inventory.usables[$item_id].healing_number}
#enddef
#define POTION_HEALING_EFFECT
	{WITH_TARGETED_EVENT SIMPLE healing_display STANDARD_CONSUMABLE_USE DISPLAY_HEALING}
#enddef

#define PROTECTION_CONSUMABLE_SETUP
	{VARIABLE protection_value $current_unit.variables.inventory.usables[$item_id].protection_value}
#enddef

#define POTION_PROTECTION_ARMOR_EFFECT
	{PROTECTION_ARMOR_MAGIC_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define POTION_PROTECTION_FIRE_EFFECT
	{PROTECTION_FROM_FIRE_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define POTION_PROTECTION_POISON_EFFECT
	{PROTECTION_FROM_POISON_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define SCROLL_PROTECTION_SLOW_EFFECT
	{PROTECTION_FROM_SLOW_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define POTION_PHOENIX_FIRE_SETUP
	{VARIABLE phoenix_amount $current_unit.variables.inventory.usables[$item_id].healing_number}
#enddef
#define POTION_PHOENIX_FIRE_EFFECT
	{PHOENIX_FIRE_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define SCROLL_DETECT_GOLD_SETUP
	{VARIABLE detect_gold_radius $current_unit.variables.inventory.usables[$item_id].radius}
#enddef
#define SCROLL_DETECT_GOLD_EFFECT
	{DETECT_GOLD_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define SCROLL_SUMMON_SETUP
	{VARIABLE max_summon_level $current_unit.variables.inventory.usables[$item_id].casting_level}
#enddef
#define SCROLL_SUMMON_FIRE_ELEMENTAL_EFFECT
	{SUMMON_ELEMENTAL_EFFECT FIRE}
	{IF_VAR current_unit.variables.complete_action equals 1 (
		[then]
			{STANDARD_CONSUMABLE_USE current_unit}
		[/then]
	)}
#enddef

#define SCROLL_SUMMON_AIR_ELEMENTAL_EFFECT
	{SUMMON_ELEMENTAL_EFFECT AIR}
	{IF_VAR current_unit.variables.complete_action equals 1 (
		[then]
			{STANDARD_CONSUMABLE_USE current_unit}
		[/then]
	)}
#enddef

#define SCROLL_SUMMON_WATER_ELEMENTAL_EFFECT
	{SUMMON_ELEMENTAL_EFFECT WATER}
	{IF_VAR current_unit.variables.complete_action equals 1 (
		[then]
			{STANDARD_CONSUMABLE_USE current_unit}
		[/then]
	)}
#enddef

#define SCROLL_SUMMON_EARTH_ELEMENTAL_EFFECT
	{SUMMON_ELEMENTAL_EFFECT EARTH}
	{IF_VAR current_unit.variables.complete_action equals 1 (
		[then]
			{STANDARD_CONSUMABLE_USE current_unit}
		[/then]
	)}
#enddef

#define POTION_DETECT_UNITS_SETUP
	{VARIABLE detect_units_radius $current_unit.variables.inventory.usables[$item_id].radius}
#enddef
#define POTION_DETECT_UNITS_EFFECT
	{DETECT_UNITS_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define POTION_IMPROVED_DETECT_UNITS_SETUP
	{VARIABLE improved_detect_units_radius $current_unit.variables.inventory.usables[$item_id].radius}
#enddef
#define POTION_IMPROVED_DETECT_UNITS_EFFECT
	{IMPROVED_DETECT_UNITS_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define SCROLL_MAPPING_SETUP
	{VARIABLE mapping_radius $current_unit.variables.inventory.usables[$item_id].radius}
#enddef
#define SCROLL_MAPPING_EFFECT
	{MAPPING_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#define SCROLL_METAL_TO_DRAIN_SETUP
	{VARIABLE drain_value $current_unit.variables.inventory.usables[$item_id].drain_value}
#enddef
#define SCROLL_METAL_TO_DRAIN_EFFECT
	{METAL_TO_DRAIN_EFFECT}
	{STANDARD_CONSUMABLE_USE current_unit}
#enddef

#item creation events 

#define EXPONENTIAL_VALUE MULTIPLY_1 MULTIPLY_2 ADD_1 ADD_2
	{VARIABLE item_args.exponent_value $item_args.value}
	{VARIABLE_OP item_args.exponent_value multiply {MULTIPLY_1}}
	{VARIABLE_OP item_args.exponent_value add {ADD_1}}
	{VARIABLE_OP item_args.exponent_value multiply $item_args.value}
	{VARIABLE_OP item_args.exponent_value multiply {MULTIPLY_2}}
	{VARIABLE_OP item_args.exponent_value add {ADD_2}}
	{VARIABLE item_args.value $item_args.exponent_value}
	{VARIABLE_OP item_args.value round 0}
#enddef

#define SUMMON_ELEMENTAL_SCROLL_CASE ELEMENT A_AN
	[case]
		value=summon_{ELEMENT}_elemental
		{VARIABLE item_args.uses 1}
		{VARIABLE_OP item_args.rank multiply .25}
		{VARIABLE_OP item_args.rank round ceil}
		{VARIABLE item_args.value $item_args.rank}
		{EXPONENTIAL_VALUE 3 1 10 20}
		{VARIABLE_OP item_args.rank add 1}
		[set_variables]
			name=$item_args.result
			mode=replace
			[value]
				user_name="scroll"
				icon="icons/scroll_red"
				description=_ "Scroll of Summon Elemental:
<small>Summons {A_AN} {ELEMENT} elemental. Casting level $item_args.rank|.
Uses - $item_args.uses|</small>"
				usable_self=0
				usable_other_adj=0
				usable_other_dis=0
				usable_adj=1
				usable_dis=0
				command=scroll_summon_{ELEMENT}_elemental
				uses=$item_args.uses
				casting_level=$item_args.rank
				ground_icon="scroll"
				category=usables
				action_use="complex action"
				absolute_value=$item_args.value
				prob_name=summon_{ELEMENT}_elemental
			[/value]
		[/set_variables]
	[/case]
#enddef

# item dropping macros
#define DROP_ITEM PATH X Y
	[if]
		[variable]
			name={PATH}.undroppable
			boolean_not_equals=1
		[/variable]
		[then]
			[item]
				x=${X}
				y=${Y}
				image=items/${PATH}.ground_icon|.png
				visible_in_fog=no
			[/item]
			[set_variables]
				name=ground_${X}|_${Y}|.items
				mode=append
				[insert_tag]
					name=literal
					variable={PATH}
				[/insert_tag]
			[/set_variables]
		[/then]
	[/if]
#enddef

#define DROP_UNWANTED
	[if]
        [variable]
            name=will_carry
            numerical_equals=0
        [/variable]
		[and]
			[variable]
				name=$path|.undroppable
				numerical_not_equals=1
			[/variable]
		[/and]
        [then]
			{DROP_ITEM $path| unit.x unit.y}
        [/then]
    [/if]
#enddef

#define DROP_CATEGORY CATEGORY
	[if]
		[variable]
			name=unit.variables.inventory.{CATEGORY}.length
			greater_than=0
		[/variable]
		[then]
			{FOREACH unit.variables.inventory.{CATEGORY} o}
		        [if]
		            [variable]
		                name=unit.variables.inventory.{CATEGORY}[$o].undroppable
		                numerical_not_equals=1
		            [/variable]
		            [then]
						[if]
							[variable]
								name=unit.variables.inventory.{CATEGORY}[$o].absolute_value
								greater_than=0
							[/variable]
							[then]
								{DROP_ITEM unit.variables.inventory.{CATEGORY}[$o] x1 y1}
							[/then]
						[/if]
		            [/then]
				[/if]
			{NEXT o}
		[/then]
	[/if]
#enddef

#define DROP_GOLD PATH X Y
	[if]
		[variable]
			name={PATH}
			greater_than=0
		[/variable]
		[then]
			{VARIABLE ground_gold_temp ${PATH}}
			[if]
				[variable]
					name=ground_{X}_{Y}.items.length
					greater_than=0
				[/variable]
				[then]
					{FOREACH_COLLAPSE ground_{X}_{Y}.items g}
						[if]
							[variable]
								name=ground_{X}_{Y}.items[$g].category
								equals="gold"
							[/variable]
							[then]
								{VARIABLE_OP ground_gold_temp add $ground_{X}_{Y}.items[$g].amount}
								[removeitem]
									x={X}
	                                y={Y}
									image=items/$ground_{X}_{Y}.items[$g].ground_icon|.png
								[/removeitem]
								{CLEAR_VARIABLE "ground_{X}_{Y}.items[$g]"}
								{VARIABLE ground_changed 1}
							[/then]
						[/if]
					{NEXT_COLLAPSE g}
				[/then]
			[/if]
			[if]
                [variable]
                    name=ground_changed
                    numerical_equals=1
                [/variable]
                [then]
                    [if]
                        [variable]
                            name="ground_{X}_{Y}.items.length"
                            greater_than=0
                        [/variable]
                        [then]
                            {FOREACH ground_{X}_{Y}.items g}
	                            [item]
	                                x={X}
	                                y={Y}
	                                image=items/$ground_{X}_{Y}.items[$g].ground_icon|.png
									visible_in_fog=no
	                            [/item]
                            {NEXT g}
                        [/then]
                    [/if]
                    {VARIABLE ground_changed 0}
                [/then]
            [/if]
			[if]
				[variable]
					name=ground_gold_temp
					less_than=26
				[/variable]
				[then]
					{VARIABLE gold_image small}
				[/then]
				[else]
					[if]
						[variable]
							name=ground_gold_temp
							less_than=76
						[/variable]
						[then]
							{VARIABLE gold_image medium}
						[/then]
						[else]
							{VARIABLE gold_image large}
						[/else]
					[/if]
				[/else]
			[/if]
			[item]
				x={X}
				y={Y}
				image=items/gold-coins-$gold_image|.png
				visible_in_fog=no
			[/item]
			[set_variables]
				name=ground_{X}_{Y}.items
				mode=append
				[value]
					category="gold"
					amount=$ground_gold_temp
					description="$ground_gold_temp| gold"
					icon=icons/gold-$gold_image|
					ground_icon=gold-coins-$gold_image|
				[/value]
			[/set_variables]
			{CLEAR_VARIABLE gold_image,ground_gold_temp}
		[/then]
	[/if]
#enddef

#define DROP_INVENTORY
	{DROP_GOLD unit.variables.personal_gold $x1| $y1|}
	[if]
		[variable]
			name=unit.variables.inventory.length
			greater_than=0
		[/variable]
		[then]
		    {DROP_CATEGORY weapons.melee}
			{DROP_CATEGORY weapons.ranged}
			{DROP_CATEGORY armor.torso}
			{DROP_CATEGORY armor.head}
			{DROP_CATEGORY armor.legs}
			{DROP_CATEGORY armor.shield}
			{DROP_CATEGORY usables}
		[/then]
	[/if]
#enddef