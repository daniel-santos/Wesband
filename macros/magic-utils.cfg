#define DISPLAY_HEALING
    text=$display_hp
    {COLOR_HEAL}
#enddef

#define CLEAR_SPELL_DISPLAY ID PATH
    [for]
        array={PATH}.abilities.dummy
        variable=q
        [do]
            [if]
                [variable]
                    name={PATH}.abilities.dummy[$q].id
                    equals="{ID}"
                [/variable]
                [then]
                    {CLEAR_VARIABLE {PATH}.abilities.dummy[$q]}
                    {VARIABLE q ${PATH}.abilities.dummy.length}
                [/then]
            [/if]
        [/do]
    [/for]
#enddef

#define SIMPLE_SPELL_SETUP CT MP
    {VARIABLE cast_time {CT}}
    {VARIABLE mana_cost {MP}}
#enddef

#define WHITE_HEALING_SETUP
    {VARIABLE cast_time 2}
    {VARIABLE healing_number "$(0$current_unit.variables.abilities.magic_casting.power*3+4)"}
    {VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define GREEN_HEALING_SETUP
    {VARIABLE cast_time 2}
    {VARIABLE healing_number "$(0$current_unit.variables.abilities.magic_casting.power*2+4)"}
    {VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define SPIRIT_HEALING_SETUP
    {VARIABLE cast_time 2}
    {VARIABLE healing_number $current_unit.variables.abilities.magic_casting.power}
    [if]
        [variable]
            name=current_unit.variables.abilities.benevolent
            greater_than=0
        [/variable]
        [then]
            {VARIABLE_OP healing_number multiply 3}
        [/then]
    [/if]
    {VARIABLE_OP healing_number add 4}
    {VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define HEALING_SPELL_EFFECT
    {WITH_TARGETED_EVENT CASTING healing_display NULL_1 DISPLAY_HEALING}
#enddef

#define SILVER_TELEPORT_SETUP
    {FIND_DISTANCE $act.target.x $act.target.y $current_unit.x $current_unit.y}
    {VARIABLE cast_time "$(0$distance/3+2)"}
    {VARIABLE mana_cost 3}
    {VARIABLE spell_range "$(0$current_unit.variables.abilities.magic_casting.power*2)"}
#enddef

#define SILVER_TELEPORT_EFFECT
    {MOVEMENT_CALCULATOR $act.target.x $act.target.y current_unit}
    [if]
        [variable]
            name=movement_cost
            greater_than=60
        [/variable]
        [then]
            [chat]
                message="You may only teleport to a location that you can move to normally."
            [/chat]
            {CANCEL_ACTION current_unit}
        [/then]
        [else]
            [if]
                [variable]
                    name=distance
                    greater_than=$spell_range
                [/variable]
                [then]
                    [chat]
                        message="You may only teleport $spell_range hexes away."
                    [/chat]
                    {CANCEL_ACTION current_unit}
                [/then]
                [else]
                    [teleport]
                        [filter]
                            x,y=$current_unit.x,$current_unit.y
                        [/filter]
                        x,y=$act.target.x,$act.target.y
                    [/teleport]
                    [sound]
                        name=magic-faeriefire.ogg
                    [/sound]
                    {VARIABLE current_unit.x $act.target.x}
                    {VARIABLE current_unit.y $act.target.y}
                    [rouse_units]
                        x=$act.target.x
                        y=$act.target.y
                        refresh=yes
                    [/rouse_units]
                    {CONFIRM_ACTION current_unit}
                [/else]
            [/if]
        [/else]
    [/if]
#enddef

#define MAPPING_SETUP
    {VARIABLE mapping_radius "$(0$current_unit.variables.abilities.magic_casting.power*5+10)"}
    {SIMPLE_SPELL_SETUP 3 6}
#enddef

#define MAPPING_APPLY PATH
    [remove_shroud]
        x,y=${PATH}.x,${PATH}.y
        radius=$mapping_radius
        side=$const.player_sides
    [/remove_shroud]
#enddef

#define MAPPING_EFFECT
    {MAPPING_APPLY current_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define DETECT_GOLD_SETUP
    {VARIABLE detect_gold_radius "$(0$current_unit.variables.abilities.magic_casting.power*4+20)"}
    {SIMPLE_SPELL_SETUP 3 6}
#enddef

#define DETECT_GOLD_APPLY PATH
    [for]
        array=detected_gold_locs
        variable=i
        [do]
            [remove_item]
                x,y=$detected_gold_locs[$i].x,$detected_gold_locs[$i].y
                image=icons/goldhere.png
            [/remove_item]
        [/do]
    [/for]
    {CLEAR_VARIABLE detected_gold_locs}
    [store_locations]
        x=${PATH}.x
        y=${PATH}.y
        radius=$detect_gold_radius
        variable=detect_gold_locations
    [/store_locations]
    [for]
        array=detect_gold_locations
        variable=i
        [do]
            {VARIABLE gold_detected 0}
            [if]
                [have_unit]
                    x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
                    [not]
                        side=$const.player_sides
                    [/not]
                [/have_unit]
                [then]
                    [store_unit]
                        [filter]
                            x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
                        [/filter]
                        variable=detect_gold_store
                    [/store_unit]
                    [if]
                        [variable]
                            name=detect_gold_store.variables.personal_gold
                            greater_than=0
                        [/variable]
                        [then]
                            {VARIABLE gold_detected 1}
                        [/then]
                        [else]
                            [if]
                                [variable]
                                    name="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|.items.length"
                                    greater_than=0
                                [/variable]
                                [then]
                                    [for]
                                        array="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|"
                                        variable=o
                                        [do]
                                            [if]
                                                [variable]
                                                    name=ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|[$o].items.category
                                                    equals=gold
                                                [/variable]
                                                [then]
                                                    {VARIABLE gold_detected 1}
                                                [/then]
                                            [/if]
                                        [/do]
                                    [/for]
                                [/then]
                            [/if]
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE detect_gold_store}
                [/then]
                [else]
                    [if]
                        [variable]
                            name="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|.items.length"
                            greater_than=0
                        [/variable]
                        [then]
                            [for]
                                array="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|"
                                variable=o
                                [do]
                                    [if]
                                        [variable]
                                            name=ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|[$o].items.category
                                            equals=gold
                                        [/variable]
                                        [then]
                                            {VARIABLE gold_detected 1}
                                        [/then]
                                    [/if]
                                [/do]
                            [/for]
                        [/then]
                    [/if]
                [/else]
            [/if]
            [if]
                [variable]
                    name=gold_detected
                    numerical_equals=1
                [/variable]
                [then]
                    [remove_shroud]
                        x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
                        radius=1
                        side=${PATH}.side
                    [/remove_shroud]
                    [item]
                        x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
                        image=icons/goldhere.png
                    [/item]
                    [set_variables]
                        name=detected_gold_locs
                        mode=append
                        [value]
                            x=$detect_gold_locations[$i].x
                            y=$detect_gold_locations[$i].y
                        [/value]
                    [/set_variables]
                [/then]
            [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE detect_gold_locations}
#enddef

#define DETECT_GOLD_EFFECT
    {DETECT_GOLD_APPLY current_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define PHOENIX_FIRE_SETUP
    {VARIABLE cast_time 4}
    {VARIABLE phoenix_amount "$((0$current_unit.variables.abilities.magic_casting.power+1)*4)"}
    {VARIABLE mana_cost "$(0$phoenix_amount/2)"}
#enddef

#define PHOENIX_FIRE_APPLY PATH
    [set_variables]
        name={PATH}.abilities.dummy
        mode=append
        [value]
            id=phoenix_fire
            name="+"
            description=_ "This unit is protected from death, and will return with ${PATH}.variables.phoenix_fire health. This value degrades by 4 every round."
        [/value]
    [/set_variables]
#enddef

#define PHOENIX_FIRE_EFFECT
    [if]
        [variable]
            name=current_unit.variables.phoenix_fire
            greater_than=0
        [/variable]
        [and]
            [variable]
                name=phoenix_amount
                less_than_equal_to=$current_unit.variables.phoenix_fire
            [/variable]
        [/and]
        [then]
            [message]
                speaker=narrator
                message=_"Your inner fire cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/then]
        [else]
            {VARIABLE current_unit.variables.phoenix_fire $phoenix_amount}
            {VARIABLE current_unit.variables.phoenix_filter 1}
            {PHOENIX_FIRE_APPLY current_unit}
            {CLEAR_VARIABLE phoenix_amount}
            {CONFIRM_ACTION current_unit}
        [/else]
    [/if]
#enddef

#define DETECT_UNITS_SETUP
    {VARIABLE detect_units_radius "$(0$current_unit.variables.abilities.magic_casting.power*5+15)"}
    {SIMPLE_SPELL_SETUP 3 6}
#enddef

#define DETECT_UNITS_APPLY PATH
    [for]
        array=detected_units_locs
        variable=i
        [do]
            [remove_item]
                x,y=$detected_units_locs[$i].x,$detected_units_locs[$i].y
                image=icons/unithere.png
            [/remove_item]
        [/do]
    [/for]
    {CLEAR_VARIABLE detected_units_locs}
    [store_locations]
        x=${PATH}.x
        y=${PATH}.y
        radius=$detect_units_radius
        variable=detect_units_locations
    [/store_locations]
    [for]
        array=detect_units_locations
        variable=i
        [do]
            {VARIABLE units_detected 0}
            [if]
                [have_unit]
                    x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
                    [not]
                        side=$const.player_sides
                    [/not]
                    [filter_vision]
                        visible=no
                        side=$const.player_sides
                    [/filter_vision]
                [/have_unit]
                [then]
                    [remove_shroud]
                        x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
                        radius=1
                        side=${PATH}.side
                    [/remove_shroud]
                    [item]
                        x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
                        image=units/unknown-unit.png
                    [/item]
                    [set_variables]
                        name=detected_units_locs
                        mode=append
                        [value]
                            x=$detect_units_locations[$i].x
                            y=$detect_units_locations[$i].y
                        [/value]
                    [/set_variables]
                [/then]
            [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE detect_units_locations}
#enddef

#define DETECT_UNITS_EFFECT
    {DETECT_UNITS_APPLY current_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define IMPROVED_DETECT_UNITS_SETUP
    {VARIABLE improved_detect_units_radius "$(0$current_unit.variables.abilities.magic_casting.power*4+12)"}
    {SIMPLE_SPELL_SETUP 3 6}
#enddef

#define IMPROVED_DETECT_UNITS_APPLY PATH
    [for]
        array=improved_detected_units_locs
        variable=i
        [do]
            [remove_item]
                x,y=$improved_detected_units_locs[$i].x,$improved_detected_units_locs[$i].y
                image=icons/unithere.png
            [/remove_item]
        [/do]
    [/for]
    {CLEAR_VARIABLE improved_detected_units_locs}
    [store_locations]
        x=${PATH}.x
        y=${PATH}.y
        radius=$improved_detect_units_radius
        variable=improved_detect_units_locations
    [/store_locations]
    [for]
        array=improved_detect_units_locations
        variable=i
        [do]
            {VARIABLE units_detected 0}
            [if]
                [have_unit]
                    x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
                    [not]
                        side=$const.player_sides
                    [/not]
                    [filter_vision]
                        visible=no
                        side=$const.player_sides
                    [/filter_vision]
                [/have_unit]
                [then]
                    [store_unit]
                        [filter]
                            x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
                        [/filter]
                        variable=temp_detect_unit_store
                    [/store_unit]
                    [remove_shroud]
                        x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
                        radius=1
                        side=${PATH}.side
                    [/remove_shroud]
                    [item]
                        x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
                        image=icons/unknown-unit-$temp_detect_unit_store.level|.png
                    [/item]
                    [set_variables]
                        name=improved_detected_units_locs
                        mode=append
                        [value]
                            x=$improved_detect_units_locations[$i].x
                            y=$improved_detect_units_locations[$i].y
                        [/value]
                    [/set_variables]
                    {CLEAR_VARIABLE temp_detect_unit_store}
                [/then]
            [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE improved_detect_units_locations}
#enddef

#define IMPROVED_DETECT_UNITS_EFFECT
    {IMPROVED_DETECT_UNITS_APPLY current_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define CHOOSE_FIRE_ELEMENTAL
    [case]
        value=0
        {VARIABLE summon_type "WBD Fire Spirit"}
    [/case]
    [case]
        value=1
        {VARIABLE summon_type "WBD Brazier Creation"}
    [/case]
    [case]
        value=2
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Fire Wisp"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Living Furnace"}
            [/else]
        [/if]
    [/case]
    [else]
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Fire Ghost"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Lava Beast"}
            [/else]
        [/if]
    [/else]
#enddef

#define CHOOSE_WATER_ELEMENTAL
    [case]
        value=0
        {VARIABLE summon_type "WBD Spout"}
    [/case]
    [case]
        value=1
        {VARIABLE summon_type "WBD Tidal"}
    [/case]
    [case]
        value=2
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Ice Crab"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Undine"}
            [/else]
        [/if]
    [/case]
    [else]
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Ice Shell"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Tempest Spirit"}
            [/else]
        [/if]
    [/else]
#enddef

#define CHOOSE_EARTH_ELEMENTAL
    [case]
        value=0
        {VARIABLE summon_type "WBD Rolling Stones"}
    [/case]
    [case]
        value=1
        {VARIABLE summon_type "WBD Animated Rock"}
    [/case]
    [case]
        value=2
        {VARIABLE summon_type "WBD Rock Golem"}
    [/case]
    [else]
        {VARIABLE summon_type "WBD StoneTitan"}
    [/else]
#enddef

#define CHOOSE_AIR_ELEMENTAL
    [case]
        value=0
        {VARIABLE summon_type "WBD Wind Servant"}
    [/case]
    [case]
        value=1
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Razorbird"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Wind Herder"}
            [/else]
        [/if]
    [/case]
    [case]
        value=2
        {VARIABLE_OP summon_random rand 0..1}
        [if]
            [variable]
                name=summon_random
                numerical_equals=0
            [/variable]
            [then]
                {VARIABLE summon_type "WBD Thunderbird"}
            [/then]
            [else]
                {VARIABLE summon_type "WBD Zephyr"}
            [/else]
        [/if]
    [/case]
    [else]
        {VARIABLE summon_type "WBD Djinn"}
    [/else]
#enddef

#define SUMMON_ELEMENTAL_SETUP
    {VARIABLE max_summon_level $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 3 6}
#enddef

#define SUMMON_ELEMENTAL_APPLY ELEMENT PATH
    [sound]
        name=magic-faeriefire.ogg
    [/sound]
    [unit]
        side=${PATH}.side
        type=$summon_type
        x=$act.target.x
        y=$act.target.y
        generate_name=no
        name=${PATH}.name + "'s summon"
        random_traits=yes
        random_gender=yes
        [variables]
            sp_side=${PATH}.variables.sp_side
            personal_gold=0
            is_summon=1
        [/variables]
        attacks_left=0
        upkeep=0
        experience=5
        [status]
            construct_unit=yes
        [/status]
    [/unit]
    [store_unit]
        [filter]
            x=$act.target.x
            y=$act.target.y
        [/filter]
        kill=yes
        variable=summoned
    [/store_unit]
    {CREATE_NPC "summoned"}
    {VARIABLE unit_path "summoned"}
    {NPC_RACE_BASE "summoned"}
    [fire_event]
        name=npc_apply_traits
    [/fire_event]
    [fire_event]
        name=npc_apply_items
    [/fire_event]
    [construct_unit]
        variable=summoned
    [/construct_unit]
    {CLEAR_VARIABLE summoned}
#enddef

#define SUMMON_ELEMENTAL_EFFECT ELEMENT
    {VARIABLE_OP max_summon_level sub 1}
    [if]
        [variable]
            name=max_summon_level
            less_than=1
        [/variable]
        [then]
            {VARIABLE random 0}
        [/then]
        [else]
            {RANDOM 0..$max_summon_level}
        [/else]
    [/if]
    [switch]
        variable=random
        {CHOOSE_{ELEMENT}_ELEMENTAL}
    [/switch]
    [get_move_cost]
        x=$act.target.x
        y=$act.target.y
        type=$summon_type
    [/get_move_cost]
    {IF_VAR movement_cost less_than 60 (
        [then]
            {SUMMON_ELEMENTAL_APPLY {ELEMENT} current_unit}
            {CONFIRM_ACTION current_unit}
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_ "You cannot summon this creature here."
                side_for=$current_unit.side
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    )}
#enddef

#define PROTECTION_FROM_POISON_SETUP
    {VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_FROM_POISON_APPLY PATH
    {CLEAR_VARIABLE {PATH}.status.poisoned}
    {VARIABLE {PATH}.variables.unpoisonable_flag 1}
    [set_variables]
        name={PATH}.abilities.dummy
        mode=append
        [value]
            id=protection_from_poison
            name="+"
            description=_ "This unit is protected from poison for the next ${PATH}.variables.status.protection_from_poison rounds."
        [/value]
    [/set_variables]
#enddef

#define PROTECTION_FROM_POISON_EFFECT
    [store_unit]
        variable=target_unit
        [filter]
            x,y=$act.target.x,$act.target.y
        [/filter]
    [/store_unit]
    [if]
        [variable]
            name=protection_value
            greater_than=$target_unit.variables.status.protection_from_poison
        [/variable]
        [then]
            {VARIABLE target_unit.variables.status.protection_from_poison $protection_value}
            {CLEAR_SPELL_DISPLAY protection_from_poison target_unit}
            {PROTECTION_FROM_POISON_APPLY target_unit}
            [unstore_unit]
                variable=target_unit
            [/unstore_unit]
            #this really needs to go, i need to think about how this is all going to work
            [if]
                [variable]
                    name=target_unit.id
                    equals=$act.actor_id
                [/variable]
                [then]
                    [store_unit]
                        variable=current_unit
                        [filter]
                            x,y=$act.target.x,$act.target.y
                        [/filter]
                    [/store_unit]
                [/then]
            [/if]
            {CONFIRM_ACTION current_unit}
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_"Your protection from poison cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    [/if]
    {CLEAR_VARIABLE target_unit}
#enddef

#define PROTECTION_FROM_SLOW_SETUP
    {VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 3 5}
#enddef

#define PROTECTION_FROM_SLOW_APPLY PATH
    {CLEAR_VARIABLE {PATH}.status.slowed}
    {VARIABLE {PATH}.variables.unslowable_flag 1}
    [set_variables]
        name={PATH}.abilities.dummy
        mode=append
        [value]
            id=protection_from_slow
            name="+"
            description=_ "This unit is protected from slowing for the next ${PATH}.variables.status.protection_from_slow rounds."
        [/value]
    [/set_variables]
#enddef

#define PROTECTION_FROM_SLOW_EFFECT
    [store_unit]
        variable=target_unit
        [filter]
            x,y=$act.target.x,$act.target.y
        [/filter]
    [/store_unit]
    [if]
        [variable]
            name=protection_value
            greater_than=$target_unit.variables.status.protection_from_slow
        [/variable]
        [then]
            {VARIABLE target_unit.variables.status.protection_from_slow $protection_value}
            {CLEAR_SPELL_DISPLAY protection_from_slow target_unit}
            {PROTECTION_FROM_SLOW_APPLY target_unit}
            [unstore_unit]
                variable=target_unit
            [/unstore_unit]
            #this really needs to go, i need to think about how this is all going to work
            [if]
                [variable]
                    name=target_unit.id
                    equals=$act.actor_id
                [/variable]
                [then]
                    [store_unit]
                        variable=current_unit
                        [filter]
                            x,y=$act.target.x,$act.target.y
                        [/filter]
                    [/store_unit]
                [/then]
            [/if]
            {CONFIRM_ACTION current_unit}
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_"Your protection from slowing cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    [/if]
    {CLEAR_VARIABLE target_unit}
#enddef

#define PROTECTION_ARMOR_MAGIC_SETUP
    {VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_ARMOR_MAGIC_APPLY PATH
    {VARIABLE protection_spell_value ${PATH}.variables.status.protection_armor_magic}
    {VARIABLE_OP protection_spell_value multiply 5}
    [for]
        array={PATH}.abilities.resistance
        variable=o
        [do]
            [if]
                [variable]
                    name={PATH}.abilities.resistance[$o].id
                    equals=protection_armor_magic
                [/variable]
                [then]
                    {CLEAR_VARIABLE {PATH}.abilities.resistance[$o]}
                    {VARIABLE o ${PATH}.abilities.resistance.length}
                [/then]
            [/if]
        [/do]
    [/for]
    [if]
        [variable]
            name={PATH}.variables.status.protection_armor_magic
            greater_than=0
        [/variable]
        [then]
            [set_variables]
                name={PATH}.abilities.resistance
                mode=append
                [value]
                    id=protection_armor_magic
                    add=$protection_spell_value
                    max_value=200
                [/value]
            [/set_variables]
        [/then]
    [/if]
    {CLEAR_SPELL_DISPLAY protection_armor_magic ({PATH})}
    [if]
        [variable]
            name={PATH}.variables.status.protection_armor_magic
            greater_than=0
        [/variable]
        [then]
            [set_variables]
                name={PATH}.abilities.dummy
                mode=append
                [value]
                    id=protection_armor_magic
                    name="+"
                    description=_ "This unit is protected from damage by an extra $protection_spell_value|%. This value degrades by 5% every round."
                [/value]
            [/set_variables]
        [/then]
    [/if]
#enddef

#define PROTECTION_ARMOR_MAGIC_EFFECT
    [store_unit]
        variable=target_unit
        [filter]
            x,y=$act.target.x,$act.target.y
        [/filter]
    [/store_unit]
    [if]
        [variable]
            name=protection_value
            greater_than=$target_unit.variables.status.protection_armor_magic
        [/variable]
        [then]
            {VARIABLE target_unit.variables.status.protection_armor_magic $protection_value}
            {PROTECTION_ARMOR_MAGIC_APPLY target_unit}
            [unstore_unit]
                variable=target_unit
            [/unstore_unit]
            #this really needs to go, i need to think about how this is all going to work
            [if]
                [variable]
                    name=target_unit.id
                    equals=$act.actor_id
                [/variable]
                [then]
                    [store_unit]
                        variable=current_unit
                        [filter]
                            id=$target_unit.id
                        [/filter]
                    [/store_unit]
                [/then]
            [/if]
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_"Your protection cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    [/if]
    {CLEAR_VARIABLE target_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define PROTECTION_FROM_FIRE_SETUP
    {VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_FROM_FIRE_APPLY PATH
    {VARIABLE protection_spell_value ${PATH}.variables.status.protection_from_fire}
    {VARIABLE_OP protection_spell_value multiply 10}
    [for]
        array={PATH}.abilities.resistance
        variable=o
        [do]
            [if]
                [variable]
                    name={PATH}.abilities.resistance[$o].id
                    equals=protection_from_fire
                [/variable]
                [then]
                    {CLEAR_VARIABLE {PATH}.abilities.resistance[$o]}
                    {VARIABLE o ${PATH}.abilities.resistance.length}
                [/then]
            [/if]
        [/do]
    [/for]
    [if]
        [variable]
            name={PATH}.variables.status.protection_from_fire
            greater_than=0
        [/variable]
        [then]
            [set_variables]
                name={PATH}.abilities.resistance
                mode=append
                [value]
                    id=protection_from_fire
                    add=$protection_spell_value
                    max_value=200
                    apply_to=fire
                [/value]
            [/set_variables]
        [/then]
    [/if]
    {CLEAR_SPELL_DISPLAY protection_from_fire ({PATH})}
    [if]
        [variable]
            name={PATH}.variables.status.protection_from_fire
            greater_than=0
        [/variable]
        [then]
            [set_variables]
                name={PATH}.abilities.dummy
                mode=append
                [value]
                    id=protection_from_fire
                    name="+"
                    description=_ "This unit is protected from fire damage by an extra $protection_spell_value|%. This value degrades by 10% every round."
                [/value]
            [/set_variables]
        [/then]
    [/if]
#enddef

#define PROTECTION_FROM_FIRE_EFFECT
    [store_unit]
        variable=target_unit
        [filter]
            x,y=$act.target.x,$act.target.y
        [/filter]
    [/store_unit]
    [if]
        [variable]
            name=protection_value
            greater_than=$target_unit.variables.status.protection_from_fire
        [/variable]
        [then]
            {VARIABLE target_unit.variables.status.protection_from_fire $protection_value}
            {PROTECTION_FROM_FIRE_APPLY target_unit}
            [unstore_unit]
                variable=target_unit
            [/unstore_unit]
            #this really needs to go, i need to think about how this is all going to work
            [if]
                [variable]
                    name=target_unit.id
                    equals=$act.actor_id
                [/variable]
                [then]
                    [store_unit]
                        variable=current_unit
                        [filter]
                            x,y=$act.target.x,$act.target.y
                        [/filter]
                    [/store_unit]
                [/then]
            [/if]
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_"Your protection cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    [/if]
    {CLEAR_VARIABLE target_unit}
    {CONFIRM_ACTION current_unit}
#enddef

#define METAL_TO_DRAIN_SETUP
    {VARIABLE drain_value $current_unit.variables.abilities.magic_casting.power}
    {SIMPLE_SPELL_SETUP 1 1}
#enddef

#define METAL_TO_DRAIN_APPLY PATH
    [for]
        array={PATH}.attack.specials.drains
        variable=o
        [do]
            [if]
                [variable]
                    name={PATH}.attack.specials.drains[$o].id
                    equals=metal_to_drain
                [/variable]
                [then]
                    {CLEAR_VARIABLE {PATH}.attack.specials[$o]}
                    {VARIABLE o ${PATH}.attack.specials.length}
                [/then]
            [/if]
        [/do]
    [/for]
    [if]
        [variable]
            name={PATH}.variables.status.metal_to_drain
            greater_than=0
        [/variable]
        [variable]
            name={PATH}.attack.material
            equals="metal"
        [/variable]
        [variable]
            name={PATH}.attack.range
            equals=melee
        [/variable]
        [then]
            [set_variables]
                name={PATH}.attack.specials
                mode=merge
                [value]
                    [drains]
                        id=metal_to_drain
                        name= _ "drains"
                        description= _ "Drain:
This unit drains health from living units, healing itself for half the amount of damage it deals (rounded down)."
                    [/drains]
                [/value]
            [/set_variables]
        [/then]
    [/if]
#enddef

#define METAL_TO_DRAIN_EFFECT
    [store_unit]
        variable=target_unit
        [filter]
            x,y=$act.target.x,$act.target.y
        [/filter]
    [/store_unit]
    [store_unit]
        variable=actor
        [filter]
            id=$act.actor_id
        [/filter]
    [/store_unit]
    [dump_variable]
        name=actor.$act.item_path|
    [/dump_variable]

    {VARIABLE drain_value $actor.$act.item_path|.power|}

    [if]
        [variable]
            name=actor.$act.item_path|.power
            greater_than=$target_unit.variables.status.metal_to_drain
        [/variable]
        [then]
            {VARIABLE target_unit.variables.status.metal_to_drain $drain_value}
            {METAL_TO_DRAIN_APPLY target_unit}
            [unstore_unit]
                variable=target_unit
            [/unstore_unit]
            # [dump_variable]
            #     name=target_unit.variables.status
            # [/dump_variable]
            #this really needs to go, i need to think about how this is all going to work
            [if]
                [variable]
                    name=target_unit.id
                    equals=$act.actor_id
                [/variable]
                [then]
                    [store_unit]
                        variable=current_unit
                        [filter]
                            x,y=$act.target.x,$act.target.y
                        [/filter]
                    [/store_unit]
                [/then]
            [/if]
        [/then]
        [else]
            [message]
                speaker=narrator
                message=_"Drain duration cannot currently be increased in this manner."
                side_for=$side_number
                image=wesnoth-icon.png
            [/message]
            {CANCEL_ACTION current_unit}
        [/else]
    [/if]
    {CLEAR_VARIABLE target_unit}
    {CONFIRM_ACTION current_unit}
#enddef

# ENCHANT_CHOOSE - this is not currently used
#
# UNIT - the unit variable
# TEXT - text to display
# OPTIONS - the array containing menu options
# EVENT - event to fire if chosen and confirmed.
#define ENCHANT_CONFIRM UNIT ITEM RESULT
    [set_variables]
        name=display
        mode=replace
        [value]
            [torso_armor]
                {DISPLAY_TORSO_ARMOR {ITEM}}
            [/torso_armor]
            [head_armor]
                {DISPLAY_HEAD_ARMOR  {ITEM}}
            [/head_armor]
            [leg_armor]
                {DISPLAY_LEGS_ARMOR  {ITEM}}
            [/leg_armor]
            [shield]
                {DISPLAY_SHIELD      {ITEM}}
            [/shield]
            [weapon]
                {DISPLAY_WEAPON      {ITEM}}
            [/weapon]
        [/value]
    [/set_variables]
    {VARIABLE menu.index $menu.slot.id}
    {IF_VAR menu.slot.type contains weapons (
        [then]
            {VARIABLE menu.index weapon}
        [/then]
    )}

    [message]
        speaker=narrator
        side_for=$side_number
        message= _ "Enchant this item?"
        [option]
            label=$display.$menu.index|.label
            image=$display.$menu.index|.image
            [command]
                {CANCEL_ACTION current_unit}
                {VARIABLE menu.level 0}
            [/command]
        [/option]
        [option]
            label=_ "(Cancel)"
            image=x.png
            [command]
                {CANCEL_ACTION current_unit}
                {VARIABLE menu.level 0}
            [/command]
        [/option]
        image=wesnoth-icon.png
    [/message]
#enddef

#define ENCHANT_WEAPON_EFFECT
    # [store_unit]
    #     variable=current_unit
    #     [filter]
    #         id=$act.unit_id
    #     [/filter]
    # [/store_unit]

#ifdef MODRPG_DEBUG_USE_CAST
    [message]
        message=_ "side: $side_number, act.item_id/path: $act.item_id|/$act.item_path|, unit: $current_unit.name act.target.x/y $act.target.x|,$act.target.y|, power=$enchant_level"
    [/message]
#endif
#     {VARIABLE menu.unit_id $current_unit.id}
#     [store_unit]
#         variable=current_unit
#         [filter]
#             id=$menu.unit_id
#         [/filter]
#     [/store_unit]

    {VARIABLE menu.enchant.level $enchant_level}
    {CLEAR_VARIABLE menu.insert}
    {SBD_WEAPON_MENU menu.insert current_unit "wbd enchant weapon" 1}
    {CONFIRM_ACTION current_unit}
    [message]
        speaker=narrator
        side_for=$side_number
        message= _ "Choose a weapon to enchant"
        [insert_tag]
            name=option
            variable=menu.insert
        [/insert_tag]
        [option]
            label=_ "(Cancel)"
            image=x.png
            [command]
                {CANCEL_ACTION current_unit}
            [/command]
        [/option]
        image=wesnoth-icon.png
    [/message]
    {IF_VAR current_unit.variables.complete_action equals 1 (
        [then]
            {STANDARD_CONSUMABLE_USE current_unit}
        [/then]
    )}
    [construct_unit]
        variable=current_unit
        text="enchanted"
        red,green,blue=224,168,16
        unstore=true
    [/construct_unit]

    [store_unit]
        variable=current_unit
        [filter]
            id=$menu.unit_id
        [/filter]
    [/store_unit]
    {CLEAR_VARIABLE menu}
#enddef

#define ENCHANT_ARMOR_EFFECT
#     {VARIABLE menu.unit_id $current_unit.id}
#     [store_unit]
#         variable=current.unit
#         [filter]
#             id=$menu.unit_id
#         [/filter]
#     [/store_unit]
    {VARIABLE menu.enchant.level $enchant_level}
    {CLEAR_VARIABLE menu.insert}
    {SBD_ARMOR_MENU menu.insert current_unit "wbd enchant armor" 1 1}
    {CONFIRM_ACTION current_unit}
    [message]
        speaker=narrator
        side_for=$side_number
        message= _ "Choose a piece of armor to enchant"
        [insert_tag]
            name=option
            variable=menu.insert
        [/insert_tag]
        [option]
            label=_ "(Cancel)"
            image=x.png
            [command]
                {CANCEL_ACTION current_unit}
            [/command]
        [/option]
        image=wesnoth-icon.png
    [/message]
    {IF_VAR current_unit.variables.complete_action equals 1 (
        [then]
            {STANDARD_CONSUMABLE_USE current_unit}
        [/then]
    )}
    [construct_unit]
        variable=current_unit
        text="enchanted"
        red,green,blue=224,168,16
        unstore=true
    [/construct_unit]

    [store_unit]
        variable=current_unit
        [filter]
            id=$menu.unit_id
        [/filter]
    [/store_unit]
    {CLEAR_VARIABLE menu}
#enddef
