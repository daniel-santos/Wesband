#prob_list use macros
#create a new prob_list from two comma-separated lists, one of item names and one of probability weights
#define PROB_LIST P_LIST ITEMS PROBS
	{VARIABLE prob_args.path {P_LIST}}
	{VARIABLE prob_args.items {ITEMS}}
	{VARIABLE prob_args.probs {PROBS}}
	[fire_event]
		name=prob_list_create
	[/fire_event]
	{CLEAR_VARIABLE prob_args}
#enddef
#macro to modify a prob_list.  available ops are: set (set an item's prob to a number, remove from list if number = 0, or add to list if not already present),
#add (increase an item's prob by a number, or add to list if not already present), and
#subtract (decrease an item's prob by a number, or remove from list if prob <= number)
#percent (set an item's prob to its current prob multiplied by the percent given - that is, 50 halves, 100 no change, 200 doubles, etc) rounds result up, removes if less than or equal to 0
#define PROB_LIST_OP P_OP P_LIST ITEM PROB
	{VARIABLE prob_args.path {P_LIST}}
	{VARIABLE prob_args.op {P_OP}}
	{VARIABLE prob_args.item {ITEM}}
	{VARIABLE prob_args.prob {PROB}}
	[fire_event]
		name=prob_list_operation
	[/fire_event]
	{CLEAR_VARIABLE prob_args}
#enddef
#this is just an easy way of saying PROB_LIST_OP set P_LIST ITEM 0
#define PROB_LIST_CLEAR P_LIST ITEM
	{VARIABLE prob_args.path {P_LIST}}
	{VARIABLE prob_args.item {ITEM}}
	[fire_event]
		name=prob_list_clear
	[/fire_event]
	{CLEAR_VARIABLE prob_args}
#enddef
#macro to retrieve information from a prob_list and store it in VAR
#can put random for ITEM to get a random item with probability determined by their prob weights,
#<item name> to retrieve probability of that item
#define PROB_LIST_GET P_LIST ITEM VAR
	{VARIABLE prob_args.path {P_LIST}}
	{VARIABLE prob_args.item {ITEM}}
	{VARIABLE prob_args.result {VAR}}
	[if]
		[variable]
			name=prob_args.item
			equals=random
		[/variable]
		[then]
			[fire_event]
				name=prob_list_random
			[/fire_event]
		[/then]
		[else]
			[fire_event]
				name=prob_list_get
			[/fire_event]
		[/else]
	[/if]
	{CLEAR_VARIABLE prob_args}
#enddef
#this is just an easy way of saying PROB_LIST_GET P_LIST random random
#define PROB_LIST_RANDOM P_LIST
	{VARIABLE prob_args.path {P_LIST}}
	{VARIABLE prob_args.result random}
	[fire_event]
		name=prob_list_random
	[/fire_event]
	{CLEAR_VARIABLE prob_args}
#enddef