#define XY_VALUE X Y
	[value]
		x={X}
		y={Y}
	[/value]
#enddef

#define ADD_POINT_TO_PATH
	[set_variables]
		name=path
		mode=append
		{XY_VALUE $point_x $point_y}
	[/set_variables]
#enddef

#define STEP_SOUTHEAST_ADJUSTMENT
    {VARIABLE_OP point_x add 2}
    {VARIABLE_OP point_y add 1}
    {ADD_POINT_TO_PATH}
#enddef

#define STEP_SOUTHWEST_ADJUSTMENT
    {VARIABLE_OP point_x add -2}
    {VARIABLE_OP point_y add 1}
    {ADD_POINT_TO_PATH}
#enddef

#define STEP_NORTHEAST_ADJUSTMENT
    {VARIABLE_OP point_x add 2}
    {VARIABLE_OP point_y add -1}
    {ADD_POINT_TO_PATH}
#enddef

#define STEP_NORTHWEST_ADJUSTMENT
    {VARIABLE_OP point_x add -2}
    {VARIABLE_OP point_y add -1}
    {ADD_POINT_TO_PATH}
#enddef

#define STEP DIRECTION LENGTH
    #give in length increments of 5
    #the path is double the length (a value of 5 = 10-step path)
    {REPEAT {LENGTH} (
        {STEP_{DIRECTION}_ADJUSTMENT}
    )}
#enddef

#define PLACE_DIAMOND_MASK FILE X Y
    [terrain_mask]
        x={X}
        y={Y}
        mask="{~campaigns/Wesband/masks/{FILE}.mask}"
    [/terrain_mask]
#enddef

#define WBD_GENERATE_DUNGEON
        # generate path definition
        {VARIABLE point_x 5}
        {VARIABLE point_y 5}
		[set_variables]
			name=path
			mode=replace
			{XY_VALUE $point_x $point_y}
		[/set_variables]
        {STEP SOUTHEAST 5}

        {RANDOM 1..3}
        {IF_VAR random numerical_not_equals 1 (
            [then]
                {STEP NORTHEAST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 2 (
            [then]
                {VARIABLE point_x 15}
                {VARIABLE point_y 10}
                {STEP SOUTHEAST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 3 (
            [then]
                {VARIABLE point_x 15}
                {VARIABLE point_y 10}
                {STEP SOUTHWEST 5}
                {STEP SOUTHEAST 5}
            [/then]
        )}

        {VARIABLE point_x 45}
        {VARIABLE point_y 5}
        {ADD_POINT_TO_PATH}
        {STEP SOUTHWEST 5}

        {RANDOM 1..3}
        {IF_VAR random numerical_not_equals 1 (
            [then]
                {STEP NORTHWEST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 2 (
            [then]
                {VARIABLE point_x 35}
                {VARIABLE point_y 10}
                {STEP SOUTHWEST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 3 (
            [then]
                {VARIABLE point_x 35}
                {VARIABLE point_y 10}
                {STEP SOUTHEAST 5}
                {STEP SOUTHWEST 5}
            [/then]
        )}

        {VARIABLE point_x 5}
        {VARIABLE point_y 45}
        {ADD_POINT_TO_PATH}
        {STEP NORTHEAST 5}

        {RANDOM 1..3}
        {IF_VAR random numerical_not_equals 1 (
            [then]
                {STEP NORTHWEST 5}
                {STEP NORTHEAST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 2 (
            [then]
                {VARIABLE point_x 15}
                {VARIABLE point_y 40}
                {STEP NORTHEAST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 3 (
            [then]
                {VARIABLE point_x 15}
                {VARIABLE point_y 40}
                {STEP SOUTHEAST 5}
            [/then]
        )}

        {VARIABLE point_x 45}
        {VARIABLE point_y 45}
        {ADD_POINT_TO_PATH}
        {STEP NORTHWEST 5}

        {RANDOM 1..3}
        {IF_VAR random numerical_not_equals 1 (
            [then]
                {STEP NORTHEAST 5}
                {STEP NORTHWEST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 2 (
            [then]
                {VARIABLE point_x 35}
                {VARIABLE point_y 40}
                {STEP SOUTHWEST 5}
            [/then]
        )}
        {IF_VAR random numerical_not_equals 3 (
            [then]
                {VARIABLE point_x 35}
                {VARIABLE point_y 40}
                {STEP NORTHWEST 5}
            [/then]
        )}

        {VARIABLE point_x 25}
        {VARIABLE point_y 35}
        {ADD_POINT_TO_PATH}
        {RANDOM 1..2}
        {IF_VAR random numerical_equals 1 (
            [then]
                {STEP NORTHEAST 5}
            [/then]
            [else]
                {STEP SOUTHEAST 5}
            [/else]
        )}

        {VARIABLE point_x 45}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {RANDOM 1..2}
        {IF_VAR random numerical_equals 1 (
            [then]
                {STEP NORTHWEST 5}
            [/then]
            [else]
                {STEP SOUTHWEST 5}
            [/else]
        )}

        {VARIABLE point_x 25}
        {VARIABLE point_y 15}
        {ADD_POINT_TO_PATH}
        {RANDOM 1..2}
        {IF_VAR random numerical_equals 1 (
            [then]
                {STEP SOUTHEAST 5}
            [/then]
            [else]
                {STEP SOUTHWEST 5}
            [/else]
        )}

        {VARIABLE point_x 25}
        {VARIABLE point_y 35}
        {ADD_POINT_TO_PATH}
        {RANDOM 1..2}
        {IF_VAR random numerical_equals 1 (
            [then]
                {STEP NORTHWEST 5}
            [/then]
            [else]
                {STEP NORTHEAST 5}
            [/else]
        )}

        {VARIABLE point_x 5}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {RANDOM 1..2}
        {IF_VAR random numerical_equals 1 (
            [then]
                {STEP NORTHEAST 5}
            [/then]
            [else]
                {STEP SOUTHEAST 5}
            [/else]
        )}

        {VARIABLE point_x 25}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {STEP NORTHWEST 5}

        {VARIABLE point_x 25}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {STEP NORTHEAST 5}

        {VARIABLE point_x 25}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {STEP SOUTHWEST 5}

        {VARIABLE point_x 25}
        {VARIABLE point_y 25}
        {ADD_POINT_TO_PATH}
        {STEP SOUTHEAST 5}

        # fill in passageways with snow as passageway marker
        {FOREACH path i}
            #want passageways to be thicker
            {VARIABLE is_x_odd $path[$i].x}
            {VARIABLE_OP is_x_odd modulo 2}
            {VARIABLE low_x $path[$i].x}
			{VARIABLE_OP low_x add -1}
			{VARIABLE high_x $path[$i].x}
			{VARIABLE_OP high_x add 1}
			{VARIABLE low_y $path[$i].y}
			{VARIABLE high_y $path[$i].y}
			{VARIABLE extra_y $path[$i].y}
			[if]
                [variable]
                    name=is_x_odd
                    numerical_equals=1
                [/variable]
                [then]
					{VARIABLE_OP low_y add -1}
					{VARIABLE_OP extra_y add 1}
                [/then]
                [else]
					{VARIABLE_OP high_y add 1}
					{VARIABLE_OP extra_y add -1}
                [/else]
            [/if]
			{MODIFY_TERRAIN Aa $low_x|-$high_x|,$path[$i].x| $low_y|-$high_y|,$extra_y|}
        {NEXT i}

        # put in rooms
		[set_variables]
			name=diag_mask
			mode=replace
			{XY_VALUE 1 1}
			{XY_VALUE 1 20}
			{XY_VALUE 1 40}
			{XY_VALUE 10 5}
			{XY_VALUE 10 15}
			{XY_VALUE 10 25}
			{XY_VALUE 10 35}
			{XY_VALUE 20 10}
			{XY_VALUE 20 20}
			{XY_VALUE 20 30}
			{XY_VALUE 30 5}
			{XY_VALUE 30 15}
			{XY_VALUE 30 25}
			{XY_VALUE 30 35}
			{XY_VALUE 40 1}
			{XY_VALUE 40 20}
			{XY_VALUE 40 40}
		[/set_variables]

        {FOREACH diag_mask i}
            {RANDOM 1..35}
			[if]
				[variable]
					name=random
					numerical_equals=35
				[/variable]
				[then]
					{RANDOM 33..35}
				[/then]
			[/if]
			[switch]
				variable=random
				[case]
					value=1
					{PLACE_DIAMOND_MASK diamond_large_upper $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=2
					{PLACE_DIAMOND_MASK diamond_large_lower $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=3
					{PLACE_DIAMOND_MASK diamond_long_upper $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=4
					{PLACE_DIAMOND_MASK diamond_long_lower $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=5
					{PLACE_DIAMOND_MASK diamond_long2_upper $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=6
					{PLACE_DIAMOND_MASK diamond_long2_lower $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=7
					{PLACE_DIAMOND_MASK diamond_large_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=8
					{PLACE_DIAMOND_MASK diamond_small_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=9
					{PLACE_DIAMOND_MASK diamond_large2_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=10
					{PLACE_DIAMOND_MASK diamond_columns $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=11
					{PLACE_DIAMOND_MASK diamond_s $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=12
					{PLACE_DIAMOND_MASK diamond_irreg $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=13
					{PLACE_DIAMOND_MASK diamond_irreg2 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=14
					{PLACE_DIAMOND_MASK diamond_irreg3 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=15
					{PLACE_DIAMOND_MASK diamond_columns2 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=16
					{PLACE_DIAMOND_MASK diamond_large_pool $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=17
					{PLACE_DIAMOND_MASK diamond_star_pool $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=18
					{PLACE_DIAMOND_MASK diamond_hex_pool $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=19
					{PLACE_DIAMOND_MASK diamond_hex $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=20
					{PLACE_DIAMOND_MASK diamond_star $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=21
					{PLACE_DIAMOND_MASK diamond_star2 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=22
					{PLACE_DIAMOND_MASK diamond_columns3 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=23
					{PLACE_DIAMOND_MASK diamond_columns4 $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=24
					{PLACE_DIAMOND_MASK diamond_large3_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=25
					{PLACE_DIAMOND_MASK diamond_large4_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=26
					{PLACE_DIAMOND_MASK diamond_large5_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=27
					{PLACE_DIAMOND_MASK diamond_large6_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=28
					{PLACE_DIAMOND_MASK diamond_large7_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=29
					{PLACE_DIAMOND_MASK diamond_large3_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=30
					{PLACE_DIAMOND_MASK diamond_large4_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=31
					{PLACE_DIAMOND_MASK diamond_large5_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=32
					{PLACE_DIAMOND_MASK diamond_large6_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=33
					{PLACE_DIAMOND_MASK diamond_large7_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[case]
					value=34
					{PLACE_DIAMOND_MASK diamond_large8_pool_center $diag_mask[$i].x $diag_mask[$i].y}
				[/case]
				[else]
					{VARIABLE_OP rand_mask rand 0..2}
					[switch]
						variable=rand_mask
						[case]
							value=0
							{PLACE_DIAMOND_MASK diamond_huge_columns $diag_mask[$i].x $diag_mask[$i].y}
						[/case]
						[case]
							value=1
							{PLACE_DIAMOND_MASK diamond_huge_columns2 $diag_mask[$i].x $diag_mask[$i].y}
						[/case]
						[case]
							value=2
							{PLACE_DIAMOND_MASK diamond_huge_maze $diag_mask[$i].x $diag_mask[$i].y}
						[/case]
					[/switch]
				[/else]
			[/switch]
        {NEXT i}
		#clean up variables we're done with
		{CLEAR_VARIABLE is_x_odd,low_x,point_x,high_x,low_y,point_y,high_y,extra_y,path,diag_mask,rand_mask}
#enddef

#define WBD_CROSS_MASK FILE TERRAIN
    [terrain_mask]
        x=1
        y=1
        mask="{~campaigns/Wesband/masks/{FILE}.mask}"
        [rule]
            old=Xu
            new=Ai
            terrain={TERRAIN}
        [/rule]
        [rule]
            old=Re
            new=Ai
            terrain=Re
        [/rule]
        [rule]
            old=Aa
            new=Ai
            terrain=Aa
        [/rule]
    [/terrain_mask]
#enddef

#define RANDOMIZE_TERRAIN LOCATIONS RANDOM_TERRAINS
	[store_locations]
		{LOCATIONS}
		variable=temp_rand_terrain
	[/store_locations]

	{FOREACH temp_rand_terrain i}
		{VARIABLE_OP rand_for_terrain rand 0..4}
		[if]
			[variable]
				name=rand_for_terrain
				equals=0
			[/variable]
			[then]
				{RANDOM {RANDOM_TERRAINS}}

				[terrain]
					x,y=$temp_rand_terrain[$i].x,$temp_rand_terrain[$i].y
					terrain=$random
				[/terrain]
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE temp_rand_terrain}
#enddef

#define WBD_APPLY_TERRAIN_ADJUSTMENTS
    ## make passageway terrain match chamber terrain and give
    ## a chance to adjust basic dirt terrain. This should be
    ## the last generator macro (objects, exits, and mobs place
    ## only on dirt, so they have to run before this).
    
        # Determine pool flavor
		{VARIABLE pool_flavor Ww}
		{RANDOM 0..6}
		{IF_VAR random less_than $dungeon_level.current (
			[then]
				{RANDOM 0..2}
				{IF_VAR random greater_than 0 (
					[then]
						{VARIABLE pool_flavor Ss}
					[/then]
				)}
			[/then]
		)}
        {RANDOM 6..14}
		{IF_VAR random less_than $dungeon_level.current (
			[then]
				{RANDOM 0..2}
				[switch]
					variable=random
					[case]
						value=1
						{VARIABLE pool_flavor Ql}
					[/case]
					[case]
						value=2
						{VARIABLE pool_flavor Qlf}
					[/case]
				[/switch]
			[/then]
		)}

        # Chance to add a cross-map flow
        {RANDOM 1..5}
        {IF_VAR random less_than 3 (
            [then]
				# Determine cross-map flow flavor
				{VARIABLE flow_flavor $pool_flavor}
				{RANDOM 4..9}
				{IF_VAR random less_than $dungeon_level.current (
					[then]
						{RANDOM 0..2}
						{IF_VAR random numerical_equals 0 (
							[then]
								{VARIABLE flow_flavor Qxu}
							[/then]
						)}
					[/then]
				)}
                {RANDOM 1..10}
				[switch]
					variable=random
					[case]
						value=1
						{WBD_CROSS_MASK cross_1 $flow_flavor}
					[/case]
					[case]
						value=2
						{WBD_CROSS_MASK cross_2 $flow_flavor}
					[/case]
					[case]
						value=3
						{WBD_CROSS_MASK cross_3 $flow_flavor}
					[/case]
					[case]
						value=4
						{WBD_CROSS_MASK cross_4 $flow_flavor}
					[/case]
					[case]
						value=5
						{WBD_CROSS_MASK cross_5 $flow_flavor}
					[/case]
					[case]
						value=6
						{WBD_CROSS_MASK cross_6 $flow_flavor}
					[/case]
					[case]
						value=7
						{WBD_CROSS_MASK cross_7 $flow_flavor}
					[/case]
					[case]
						value=8
						{WBD_CROSS_MASK cross_8 $flow_flavor}
					[/case]
					[case]
						value=9
						{WBD_CROSS_MASK cross_9 $flow_flavor}
					[/case]
					[else]
						{WBD_CROSS_MASK cross_10 $flow_flavor}
					[/else]
				[/switch]
            [/then]
        )}

        # Possibility to use stone wall instead of cave wall
        {RANDOM 1..3}
        {IF_VAR random numerical_equals 1 (
            [then]
                [store_locations]
                    x=1-50
                    y=1-50
                    terrain=Xu
                    variable=wall_finalize
                [/store_locations]
                {FOREACH wall_finalize i}
                    {MODIFY_TERRAIN Xos $wall_finalize[$i].x $wall_finalize[$i].y}
                {NEXT i}
                {CLEAR_VARIABLE wall_finalize}
            [/then]
        )}

        # Add a chance of floor conversion (dwarf castle, encampment, cave, or water)
        [store_locations]
            x=1-50
            y=1-50
            terrain=Re,Aa
            variable=terrain_finalize
        [/store_locations]
        {VARIABLE terrain_variation Rd}
        #boosted terrain variations more than dov had
        {IF_VAR terr_rand greater_than 3 (
            [then]
                {VARIABLE terrain_variation Re}
            [/then]
        )}
		{IF_VAR terr_rand greater_than 6 (
            [then]
                {VARIABLE terrain_variation Ryc}
            [/then]
        )}
        {IF_VAR terr_rand greater_than 8 (
            [then]
                {VARIABLE terrain_variation Ur}
            [/then]
        )}
        {IF_VAR terr_rand greater_than 14 (
            [then]
                {VARIABLE terrain_variation Wwf}
            [/then]
        )}
        {IF_VAR terr_rand greater_than 16 (
            [then]
                {VARIABLE terrain_variation Rr}
            [/then]
        )}
		{IF_VAR terr_rand greater_than 17 (
            [then]
                {VARIABLE terrain_variation Ryv}
            [/then]
        )}
        {IF_VAR terr_rand greater_than 18 (
            [then]
                {VARIABLE terrain_variation Rys}
            [/then]
        )}
		{IF_VAR terr_rand greater_than 19 (
            [then]
                {VARIABLE terrain_variation Ryf}
            [/then]
        )}

        # Set passageway terrain to match chamber terrain and apply new variation
        {FOREACH terrain_finalize i}
            {MODIFY_TERRAIN $terrain_variation $terrain_finalize[$i].x $terrain_finalize[$i].y}
        {NEXT i}
        {CLEAR_VARIABLE terrain_finalize}

        #add random terrain based on terrain type
        [if]
			[variable]
				name=terr_rand 
				less_than=4
			[/variable]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Rd
                ) "Rd^Wel,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Rd^Dr,Uh,Uh,Uh,Uh,Uh,Uh,Uu,Uu,Uu,Uu,Uu,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
        [if]
			[variable]
				name=terr_rand 
				greater_than=3
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=7
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Re
                ) "Re^Wel,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Re^Dr,Uh,Uh,Uh,Uh,Uh,Uu,Uu,Uu,Uu,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
		[if]
			[variable]
				name=terr_rand 
				greater_than=6
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=9
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Ryc
                ) "Ryc^Wel,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Uh,Uh,Uh,Uh,Uh,Uu,Uu,Uu,Uu,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Ryc^Dr,Uh,Uh,Uh,Uh,Uh,Uu,Uu,Uu,Uu,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
        [if]
			[variable]
				name=terr_rand 
				greater_than=8
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=15
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Ur
                ) "Ur^Wel,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uh,Uh,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uu,Uu,Uh,Uu,Uh,Uh,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Rd,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Ur^Dr,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
        [if]
			[variable]
				name=terr_rand 
				greater_than=14
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=17
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Wwf
                ) "Wwf^Wel,Wwf^Wel,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Wwr,Ds,Ds,Ds,Ds,Ds,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Ss,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Wwf^Dr,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
        [if]
			[variable]
				name=terr_rand 
				greater_than=16
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=18
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Rr
                ) "Rr^Wel,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf,Rr^Dr,Rr^Dr,Rr^Dr,Rr^Dr,Ur,Rd,Uh,Uu,Uu^Uf"}
            [/then]
        [/if]
        [if]
			[variable]
				name=terr_rand 
				greater_than=17
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=19
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Ryv
                ) "Ryv^Wel,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Ryv^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
		[if]
			[variable]
				name=terr_rand 
				greater_than=18
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=20
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Rys
                ) "Rys^Wel,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Rys^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
		[if]
			[variable]
				name=terr_rand 
				greater_than=19
			[/variable]
			[and]
				[variable]
					name=terr_rand
					less_than=9000
				[/variable]
			[/and]
            [then]
                {RANDOMIZE_TERRAIN (
                    terrain=Ryf
                ) "Ryf^Wel,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Ryf^Dr,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uh,Uu,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf,Uu^Uf"}
            [/then]
        [/if]
		
		#exits on flat terrain
		[terrain]
			x,y=$trapdoor_down.x,$trapdoor_down.y
			terrain=$terrain_variation
		[/terrain]
		[terrain]
			x,y=$trapdoor_up.x,$trapdoor_up.y
			terrain=$terrain_variation
		[/terrain]
		
        # Fill in pools
        [store_locations]
            x=1-50
            y=1-50
            terrain=Ai
            variable=pool_fill
        [/store_locations]
        {FOREACH pool_fill i}
            {MODIFY_TERRAIN $pool_flavor $pool_fill[$i].x $pool_fill[$i].y}
        {NEXT i}
		#add a water loner if there is water or swamp
		{ADD_POOL_LONER}
        {CLEAR_VARIABLE pool_fill}
#enddef

#define WBD_TOWN_SETUP
   [switch]
      variable=town_type
      [case]
         value=standard1
         {TELEPORT_UNIT side=1 20 12}
         {TELEPORT_UNIT side=2 19 17}
         {TELEPORT_UNIT side=3 22 15}
         {TELEPORT_UNIT side=4 20 15}
      [/case]
      [case]
         value=sylvan1
         {TELEPORT_UNIT side=1 18 13}
         {TELEPORT_UNIT side=2 22 14}
         {TELEPORT_UNIT side=3 19 17}
         {TELEPORT_UNIT side=4 20 14}
      [/case]
      [case]
         value=cavern1
         {TELEPORT_UNIT side=1 20 12}
         {TELEPORT_UNIT side=2 17 15}
         {TELEPORT_UNIT side=3 22 14}
         {TELEPORT_UNIT side=4 20 14}
      [/case]
#desert looks strange when you have trees and lakes all around it
#      [case]
#         value=desert1
#         {TELEPORT_UNIT side=1 18 14}
#         {TELEPORT_UNIT side=2 18 17}
#         {TELEPORT_UNIT side=3 21 17}
#         {TELEPORT_UNIT side=4 6 5}
#         {VARIABLE initial_shop_x 19}
#         {VARIABLE initial_shop_y 16}
#      [/case]
      [case]
         value=standard2
         {TELEPORT_UNIT side=1 20 11}
         {TELEPORT_UNIT side=2 17 17}
         {TELEPORT_UNIT side=3 23 17}
         {TELEPORT_UNIT side=4 22 15}
      [/case]
   [/switch]
#enddef
