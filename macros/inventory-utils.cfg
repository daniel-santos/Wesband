#define WBD_DISPLAY_WEAPON PATH A_DAM A_NUM
    image=attacks/${PATH}.icon|.png
    label=_ "${PATH}.description|
<small><small>Class: ${PATH}.class_description|${PATH}.evade_description|</small></small>
<small>Base: (${PATH}.damage|-${PATH}.number|), Adjusted: ({A_DAM}-{A_NUM}) ${PATH}.type|
<small>${PATH}.special|</small></small>"#enddef

#define WBD_FOR_DROPPABLE UNIT CATEGORY EFFECT
    {VARIABLE i_cat {CATEGORY}}
    [for]
        array={UNIT}.variables.inventory.{CATEGORY}
        variable=i
        [do]
            [if]
                [not]
                    [variable]
                        name={UNIT}.variables.inventory.{CATEGORY}[$i].undroppable
                        equals=1
                    [/variable]
                    [or]
                        [variable]
                            name=i_cat
                            equals=weapons.melee
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.melee_1
                                equals=$i
                            [/variable]
                            [or]
                                [variable]
                                    name={UNIT}.variables.equipment_slots.melee_2
                                    equals=$i
                                [/variable]
                            [/or]
                            [or]
                                [variable]
                                    name={UNIT}.variables.equipment_slots.melee_3
                                    equals=$i
                                [/variable]
                            [/or]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=i_cat
                            equals=weapons.ranged
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.ranged
                                equals=$i
                            [/variable]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=i_cat
                            equals=armor.shield
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.shield
                                equals=$i
                            [/variable]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=i_cat
                            equals=armor.head
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.head_armor
                                equals=$i
                            [/variable]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=i_cat
                            equals=armor.torso
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.torso_armor
                                equals=$i
                            [/variable]
                        [/and]
                    [/or]
                    [or]
                        [variable]
                            name=i_cat
                            equals=armor.legs
                        [/variable]
                        [and]
                            [variable]
                                name={UNIT}.variables.equipment_slots.leg_armor
                                equals=$i
                            [/variable]
                        [/and]
                    [/or]
                [/not]
                [then]
                    {EFFECT}
                [/then]
            [/if]
        [/do]
    [/for]
    {CLEAR_VARIABLE i_cat}
#enddef

#define WBD_INVENTORY_CANCEL_STACK_POP
    {FIRE_EVENT "wbd inventory cancel stack pop"}
#enddef

#define WBD_INVENTORY_CANCEL_STACK_PUSH ACTION_TYPE
    {FIRE_EVENT "wbd inventory cancel stack push"}
    {VARIABLE current.undo_type {ACTION_TYPE}}
#enddef

#define WBD_PAPERDOLL_CALCS
    [if]
        [variable]
            name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.head
            greater_than=0
        [/variable]
        [then]
            {VARIABLE current.unit.variables.equipment_slots.head_armor 0}
        [/then]
    [/if]
    [if]
        [variable]
            name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.legs
            greater_than=0
        [/variable]
        [then]
            {VARIABLE current.unit.variables.equipment_slots.leg_armor 0}
        [/then]
    [/if]
    [if]
        [variable]
            name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.shield
            greater_than=0
        [/variable]
        [then]
            {VARIABLE current.unit.variables.equipment_slots.shield 0}
        [/then]
    [/if]
    [construct_unit]
        variable=current.unit
    [/construct_unit]

    {VARIABLE paperdoll.body "$(0$current.unit.variables.body)"}
    {VARIABLE paperdoll.deft "$(0$current.unit.variables.deft)"}
    {VARIABLE paperdoll.mind "$(0$current.unit.variables.mind)"}

    {VARIABLE paperdoll.arcane "$(100-0$current.unit.variables.resistance.arcane)"}
    {VARIABLE paperdoll.blade "$(100-0$current.unit.variables.resistance.blade)"}
    {VARIABLE paperdoll.cold "$(100-0$current.unit.variables.resistance.cold)"}
    {VARIABLE paperdoll.fire "$(100-0$current.unit.variables.resistance.fire)"}
    {VARIABLE paperdoll.impact "$(100-0$current.unit.variables.resistance.impact)"}
    {VARIABLE paperdoll.pierce "$(100-0$current.unit.variables.resistance.pierce)"}

    {VARIABLE paperdoll.adjusted_arcane "$(100-0$current.unit.resistance.arcane)"}
    {VARIABLE paperdoll.adjusted_blade "$(100-0$current.unit.resistance.blade)"}
    {VARIABLE paperdoll.adjusted_cold "$(100-0$current.unit.resistance.cold)"}
    {VARIABLE paperdoll.adjusted_fire "$(100-0$current.unit.resistance.fire)"}
    {VARIABLE paperdoll.adjusted_impact "$(100-0$current.unit.resistance.impact)"}
    {VARIABLE paperdoll.adjusted_pierce "$(100-0$current.unit.resistance.pierce)"}

    {VARIABLE paperdoll.evade "$(3*0$current.unit.variables.evade_level)"}
    {VARIABLE paperdoll.adjusted_evade "$($paperdoll.evade|+0$current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].evade_adjust|+0$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].evade_adjust|+0$current.unit.variables.inventory.armor.head[$current.unit.variables.equipment_slots.head_armor|].evade_adjust|+0$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].evade_adjust|+0$current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_1|].evade_adjust|)"}
    {IF_VAR current.unit.variables.abilities.wield greater_than 0 (
        [then]
            {VARIABLE_OP paperdoll.adjusted_evade add "$(0$current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_2|].evade_adjust)"}
            {IF_VAR current.unit.variables.abilities.wield greater_than 1 (
                [then]
                    {VARIABLE_OP paperdoll.adjusted_evade add "$(0$current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_3|].evade_adjust)"}
                [/then]
            )}
        [/then]
    )}

    {VARIABLE paperdoll.armor_magic_adjust "$(0$current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].magic_adjust|+0$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].magic_adjust|+0$current.unit.variables.inventory.armor.head[$current.unit.variables.equipment_slots.head_armor|].magic_adjust|+0$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].magic_adjust|)"}
    [if]
        [variable]
            name=current.unit.race
            equals="dwarf"
        [/variable]
        [then]
            {VARIABLE_OP paperdoll.armor_magic_adjust divide 2}
            {IF_VAR current.unit.attack[0].user_name equals "hammer" (
                [then]
                    {VARIABLE paperdoll.adjusted_armor_magic "$(3*0$current.unit.variables.abilities.magic_casting.focus+0$paperdoll.armor_magic_adjust)"}
                [/then]
                [else]
                    {VARIABLE paperdoll.adjusted_armor_magic "$(0$paperdoll.armor_magic_adjust)"}
                [/else]
            )}
        [/then]
        [else]
            {IF_VAR current.unit.attack[0].name equals "sword" (
                [then]
                    {VARIABLE paperdoll.adjusted_armor_magic "$(3*0$current.unit.variables.abilities.magic_casting.focus+0$paperdoll.armor_magic_adjust)"}
                [/then]
                [else]
                    {VARIABLE paperdoll.adjusted_armor_magic "$(0$paperdoll.armor_magic_adjust)"}
                [/else]
            )}
        [/else]
    [/if]
    [if]
        [variable]
            name=paperdoll.adjusted_armor_magic
            greater_than=0
        [/variable]
        [then]
            {VARIABLE paperdoll.adjusted_armor_magic 0}
        [/then]
    [/if]
    {VARIABLE paperdoll.def_adjust "$(0$current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].terrain.flat.defense+0$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].terrain.flat.defense)"}
    {VARIABLE_OP paperdoll.def_adjust multiply -1}
    {VARIABLE paperdoll.def_adjust_shield "$(0$paperdoll.def_adjust+0$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].terrain_recoup)"}
    [if]
        [variable]
            name=paperdoll.def_adjust_shield
            greater_than=0
        [/variable]
        [then]
            {VARIABLE paperdoll.def_adjust_shield 0}
        [/then]
    [/if]
    {VARIABLE paperdoll.armor_ranged_adjust "$(0$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].ranged_adjust+0$current.unit.variables.inventory.armor.head[$current.unit.variables.equipment_slots.head_armor|].ranged_adjust-100)"}
    {VARIABLE paperdoll.move_lost "$(0$current.unit.variables.max_moves|-$current.unit.max_moves|)"}
    {VARIABLE paperdoll.move_loss_rate "$(100/max(1,0$current.unit.variables.max_moves))"}
#enddef

#define WBD_DISPLAY_PAPERDOLL
    message= _ "<small>Resistances: Adjusted (Natural)
Blade: $paperdoll.adjusted_blade| ($paperdoll.blade|)   Arcane: $paperdoll.adjusted_arcane| ($paperdoll.arcane|)
Impact: $paperdoll.adjusted_impact| ($paperdoll.impact|)  Cold: $paperdoll.adjusted_cold| ($paperdoll.cold|)
Pierce: $paperdoll.adjusted_pierce| ($paperdoll.pierce|)  Fire: $paperdoll.adjusted_fire| ($paperdoll.fire|)
Body:  $paperdoll.body| Deft:  $paperdoll.deft| Mind:  $paperdoll.mind|
Evade: $paperdoll.adjusted_evade| ($paperdoll.evade|)
Terrain Defense Adjust: $paperdoll.def_adjust (After Shield: $paperdoll.def_adjust_shield|)
Movement Lost: $paperdoll.move_lost (Loss rate: evade penalty/$paperdoll.move_loss_rate| rounded up)
Magic Armor Penalty: $paperdoll.armor_magic_adjust|% (After Focus: $paperdoll.adjusted_armor_magic|%)
Ranged Armor Penalty: $paperdoll.armor_ranged_adjust|%
Gold: $current.unit.variables.personal_gold</small>"#enddef

# SBD_WEAPON_MENU -- Setup a menu of weapons
#
# DEST - array to store menu options in
# UNIT - unit in question
# EVENT - the event to fire when the option is selected
# SHOW_EMPTY - should be exactly 1 to show empty slots, zero to hide them
#define SBD_WEAPON_MENU DEST UNIT EVENT SHOW_EMPTY
    {VARIABLE block_wield ${UNIT}.variables.inventory.armor.shield[${UNIT}.variables.equipment_slots.shield|].block_wield|}
    [for]
        variable=i
        start=0
        end=2
        [do]
            {VARIABLE i_plus_one $i}
            {VARIABLE_OP i_plus_one add 1}
            {VARIABLE melee_idx ${UNIT}.variables.equipment_slots.melee_$i_plus_one||}
            [if]
                {VARIABLE_CONDITIONAL melee_idx greater_than_equal_to "$(1-{SHOW_EMPTY})"}
                [and]
                    {VARIABLE_CONDITIONAL i equals 0}
                    [or]
                        {VARIABLE_CONDITIONAL {UNIT}.variables.abilities.wield greater_than_equal_to $i}
                        [and]
                            [not]
                                {VARIABLE_CONDITIONAL block_wield greater_than_equal_to $i}
                            [/not]
                        [/and]
                    [/or]
                [/and]
                [then]
                    [set_variables]
                        name={DEST}
                        mode=append
                        [value]
                            {WBD_DISPLAY_WEAPON {UNIT}.variables.inventory.weapons.melee[$melee_idx|] ${UNIT}.attack[$i].damage| ${UNIT}.attack[$i].number|}
                            [command]
                                {VARIABLE menu.unit {UNIT}}
                                {VARIABLE menu.slot.type weapons.melee}
                                {VARIABLE menu.slot.id melee_$i_plus_one|}
                                {FIRE_EVENT {EVENT}}
                            [/command]
                        [/value]
                    [/set_variables]
                [/then]
            [/if]
        [/do]
    [/for]
    [if]
        {VARIABLE_CONDITIONAL {UNIT}.variables.inventory.armor.shield[${UNIT}.variables.equipment_slots.shield].block_ranged equals 0}
        [not]
            {VARIABLE_CONDITIONAL {UNIT}.variables.npc_init.no_ranged equals 1}
        [/not]
        [then]
            {VARIABLE unit_path {UNIT}}
            [calculate_weapon_display]
                unit_variable={UNIT}
                weapon_variable={UNIT}.variables.inventory.weapons.ranged[${UNIT}.variables.equipment_slots.ranged]
            [/calculate_weapon_display]
            [set_variables]
                name={DEST}
                mode=append
                [value]
                    {WBD_DISPLAY_WEAPON {UNIT}.variables.inventory.weapons.ranged[${UNIT}.variables.equipment_slots.ranged] $display_damage| $display_number|}
                    [command]
                        {VARIABLE menu.unit {UNIT}}
                        {VARIABLE menu.slot.type weapons.ranged}
                        {VARIABLE menu.slot.id ranged}
                        {FIRE_EVENT {EVENT}}
                    [/command]
                [/value]
            [/set_variables]
        [/then]
    [/if]
    {CLEAR_VARIABLE i_plus_one}
#enddef



# SBD_ARMOR_MENU -- Setup a menu of armor
#
# DEST - array to store menu options in
# UNIT - unit in question
# EVENT - the event to fire when the option is selected
# SHOW_EMPTY - should be exactly 1 to show empty slots, zero to hide them
#define SBD_ARMOR_MENU DEST UNIT EVENT SHOW_EMPTY
    {IF_VAR {UNIT}.variables.inventory.armor.torso[${UNIT}.variables.equipment_slots.torso_armor].restricts.shield equals 0 (
        [then]
            [set_variables]
                name={DEST}
                mode=append
                [value]
                    {DISPLAY_SHIELD {UNIT}.variables.inventory.armor.shield[${UNIT}.variables.equipment_slots.shield]}
                    [command]
                        {VARIABLE menu.unit {UNIT}}
                        {VARIABLE menu.slot.type armor.shield}
                        {VARIABLE menu.slot.id shield}
                        {FIRE_EVENT {EVENT}}
                    [/command]
                [/value]
            [/set_variables]
        [/then]
    )}
    {IF_VAR {UNIT}.variables.inventory.armor.torso[${UNIT}.variables.equipment_slots.torso_armor].restricts.head equals 0 (
        [then]
            [set_variables]
                name={DEST}
                mode=append
                [value]
                    {DISPLAY_HEAD_ARMOR {UNIT}.variables.inventory.armor.head[${UNIT}.variables.equipment_slots.head_armor]}
                    [command]
                        {VARIABLE menu.unit {UNIT}}
                        {VARIABLE menu.slot.type armor.head}
                        {VARIABLE menu.slot.id head_armor}
                        {FIRE_EVENT {EVENT}}
                    [/command]
                [/value]
            [/set_variables]
        [/then]
    )}
    [set_variables]
        name={DEST}
        mode=append
        [value]
            {DISPLAY_TORSO_ARMOR {UNIT}.variables.inventory.armor.torso[${UNIT}.variables.equipment_slots.torso_armor]}
            [command]
                {VARIABLE menu.unit {UNIT}}
                {VARIABLE menu.slot.type armor.torso}
                {VARIABLE menu.slot.id torso_armor}
                {FIRE_EVENT "{EVENT}"}
            [/command]
        [/value]
    [/set_variables]
    {IF_VAR {UNIT}.variables.inventory.armor.torso[${UNIT}.variables.equipment_slots.torso_armor].restricts.legs equals 0 (
        [then]
            [set_variables]
                name={DEST}
                mode=append
                [value]
                    {DISPLAY_LEGS_ARMOR {UNIT}.variables.inventory.armor.legs[${UNIT}.variables.equipment_slots.leg_armor]}
                    [command]
                        {VARIABLE menu.unit {UNIT}}
                        {VARIABLE menu.slot.type armor.legs}
                        {VARIABLE menu.slot.id leg_armor}
                        {FIRE_EVENT "{EVENT}"}
                    [/command]
                [/value]
            [/set_variables]
        [/then]
    )}
#enddef

#define WBD_COMMAND_MANAGE_INVENTORY
    [set_menu_item]
        id=c_manage_inventory
        image=commands/inventory.png
        description=_ "Manage Inventory"
        [filter_location]
            x,y=$x1,$y1
            [filter]
                side=$side_number
                [and]
                    {WBD_LIVING_UNIT}
                [/and]
            [/filter]
        [/filter_location]

        [command]
            [set_variables]
                name=menu.location
                mode=replace
                [value]
                    x=$x1
                    y=$y1
                [/value]
            [/set_variables]
            [store_unit]
                variable=current.unit
                [filter]
                    x=$menu.location.x
                    y=$menu.location.y
                [/filter]
            [/store_unit]
            {SET_ZERO_SLOTS current.unit}
            [store_unit]
                variable=current.adjacent
                [filter]
                    side=$const.player_sides
                    [filter_adjacent]
                        id=$current.unit.id
                    [/filter_adjacent]
                    [not]
                        type="WBD Unknown Adventurer"
                    [/not]
                    [and]
                        {WBD_LIVING_UNIT}
                    [/and]
                [/filter]
            [/store_unit]
            {IF_VAR current.unit.canrecruit equals yes (
                [then]
                    {VARIABLE menu.construct_type pc}
                [/then]
                [else]
                    {VARIABLE menu.construct_type npc}
                    [store_unit]
                        variable=current.leader
                        [filter]
                            side=$side_number
                            canrecruit=yes
                            [filter_wml]
                                [variables]
                                    sp_side=$current.unit.variables.sp_side
                                [/variables]
                            [/filter_wml]
                        [/filter]
                    [/store_unit]
                [/else]
            )}
            [set_variables]
                name=current.start_equip
                mode=replace
                [value]
                    primary=$current.unit.variables.equipment_slots.melee_1
                    secondary=$current.unit.variables.equipment_slots.melee_2
                    tertiary=$current.unit.variables.equipment_slots.melee_3
                    ranged=$current.unit.variables.equipment_slots.ranged
                    shield=$current.unit.variables.equipment_slots.shield
                    head=$current.unit.variables.equipment_slots.head_armor
                    torso=$current.unit.variables.equipment_slots.torso_armor
                    legs=$current.unit.variables.equipment_slots.leg_armor
                [/value]
            [/set_variables]
            {VARIABLE menu.actor 0}
            {VARIABLE_OP menu.actor string_length $current.unit.name}
            {IF_VAR menu.actor greater_than 0 (
                [then]
                    {VARIABLE menu.actor $current.unit.name}
                [/then]
                [else]
                    {VARIABLE menu.actor (_ "your minion")}
                [/else]
            )}
            {VARIABLE current.action.available "$(2*0$current.unit.attacks_left+0$current.unit.variables.simple_action)"}
            {VARIABLE current.action.expended 0}
            {VARIABLE menu.cancel_ptr 0}
            {VARIABLE current.undo_type "none"}
            [set_variables]
                name=current.ground
                mode=replace
                to_variable=ground.x$menu.location.x|.y$menu.location.y|.items
            [/set_variables]
            [set_variables]
                name=cancel
                mode=replace
                to_variable=current
            [/set_variables]
            {VARIABLE menu.level 0}
            [while]
                [variable]
                    name=menu.level
                    equals=0
                [/variable]
                [do]
                    {VARIABLE menu.droppable 0}
                    {WBD_FOR_DROPPABLE current.unit weapons.melee (
                        {VARIABLE menu.droppable 1}
                        [break][/break]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit weapons.ranged (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit armor.shield (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit armor.head (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit armor.torso (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit armor.legs (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {IF_VAR menu.droppable equals 0 (
                        [then]
                            {WBD_FOR_DROPPABLE current.unit usables (
                                {VARIABLE menu.droppable 1}
                                [break][/break]
                            )}
                        [/then]
                    )}
                    {VARIABLE menu.tinkerable 0}
                    [for]
                        array=current.unit.variables.inventory.weapons.ranged
                        variable=i
                        [do]
                            {IF_VAR current.unit.variables.inventory.weapons.ranged[$i].user_name equals thunderstick (
                                [then]
                                    {VARIABLE menu.tinkerable 1}
                                    [break][/break]
                                [/then]
                            )}
                        [/do]
                    [/for]
                    {WBD_PAPERDOLL_CALCS}
                    [message]
                        speaker=narrator
                        side_for=$side_number
                        #message=_ "Managing $menu.actor|'s inventory."
                        {WBD_DISPLAY_PAPERDOLL}
                        [option]
                            label=_ "(End - Confirm changes)"
                            image=check.png
                            [show_if]
                                [variable]
                                    name=current.undo_type
                                    not_equals="none"
                                [/variable]
                            [/show_if]
                            [command]
                                {IF_VAR current.action.expended greater_than 1 (
                                    [or]
                                        [variable]
                                            name=current.action.expended
                                            equals=1
                                        [/variable]
                                        [and]
                                            [variable]
                                                name=current.action.available
                                                equals=2
                                            [/variable]
                                        [/and]
                                    [/or]
                                    [then]
                                        [check_safety]
                                            x=$menu.location.x
                                            y=$menu.location.y
                                            variable=current.unit.attacks_left
                                        [/check_safety]
                                    [/then]
                                    [else]
                                        {IF_VAR current.action.expended equals 1 (
                                            [then]
                                                [check_safety]
                                                    x=$menu.location.x
                                                    y=$menu.location.y
                                                    variable=current.unit.variables.simple_action
                                                [/check_safety]
                                            [/then]
                                        )}
                                    [/else]
                                )}
                                [construct_unit]
                                    variable=current.unit
                                [/construct_unit]
                                {VARIABLE menu.level -1}
                            [/command]
                        [/option]
                        [option]
                            label=_ "(End - No changes)"
                            image=check.png
                            [show_if]
                                [variable]
                                    name=current.undo_type
                                    equals="none"
                                [/variable]
                            [/show_if]
                            [command]
                                {VARIABLE menu.level -1}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Get all items here"
                            image=commands/get.png
                            [show_if]
                                [variable]
                                    name=current.action.available
                                    greater_than=1
                                [/variable]
                                [and]
                                    [variable]
                                        name=ground.x$menu.location.x|.y$menu.location.y|.items.length
                                        greater_than=0
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {WBD_INVENTORY_GET_ALL $menu.location.x| $menu.location.y|}
                                {VARIABLE menu.action_flag 1}
                                [construct_unit]
                                    variable=current.unit
                                [/construct_unit]
                            [/command]
                        [/option]
                        [option]
                            label=_ "Manage equipment"
                            image=icons/equipment.png
                            [show_if]
                                [variable]
                                    name=current.action.available
                                    greater_than=1
                                [/variable]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd manage equipment"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "View equipment"
                            image=icons/equipment.png
                            [show_if]
                                [variable]
                                    name=current.action.available
                                    less_than=2
                                [/variable]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd view equipment"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Tinker: Thunderstick"
                            image=attacks/thunderstick.png
                            [show_if]
                                [variable]
                                    name=current.unit.variables.abilities.thunderstick_tinker
                                    greater_than=0
                                [/variable]
                                [and]
                                    [variable]
                                        name=menu.tinkerable
                                        equals=1
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd thunderstick tinker"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Get items"
                            image=icons/get-all.png
                            [show_if]
                                [variable]
                                    name=ground.x$menu.location.x|.y$menu.location.y|.items.length
                                    greater_than=0
                                [/variable]
                                [and]
                                    [variable]
                                        name=current.action.available
                                        greater_than=0
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd get items"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Give items"
                            image=icons/item-give.png
                            [show_if]
                                [variable]
                                    name=cancel[0].adjacent.length
                                    greater_than=0
                                [/variable]
                                [and]
                                    [variable]
                                        name=menu.droppable
                                        equals=1
                                    [/variable]
                                    [or]
                                        [variable]
                                            name=current.unit.variables.personal_gold
                                            greater_than=0
                                        [/variable]
                                    [/or]
                                [/and]
                                [and]
                                    [variable]
                                        name=current.action.available
                                        greater_than=0
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd give items"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Drop items"
                            image=icons/item-drop.png
                            [show_if]
                                [variable]
                                    name=current.action.available
                                    greater_than=0
                                [/variable]
                                [and]
                                    [variable]
                                        name=menu.droppable
                                        equals=1
                                    [/variable]
                                    [or]
                                        [variable]
                                            name=current.unit.variables.personal_gold
                                            greater_than=0
                                        [/variable]
                                    [/or]
                                [/and]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd drop items"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "Drop items by category"
                            image=icons/item-drop.png
                            [show_if]
                                [variable]
                                    name=current.action.available
                                    greater_than=0
                                [/variable]
                                [and]
                                    [variable]
                                        name=menu.droppable
                                        equals=1
                                    [/variable]
                                [/and]
                            [/show_if]
                            [command]
                                {FIRE_EVENT "wbd drop items category"}
                            [/command]
                        [/option]
                        [option]
                            label=_ "(Undo $current.undo_type|)"
                            image=x.png
                            [show_if]
                                [variable]
                                    name=current.undo_type
                                    not_equals="none"
                                [/variable]
                            [/show_if]
                            [command]
                                {WBD_INVENTORY_CANCEL_STACK_POP}
                            [/command]
                        [/option]
                        [option]
                            label=_ "(End - cancel all changes)"
                            image=x.png
                            [show_if]
                                [variable]
                                    name=current.undo_type
                                    not_equals="none"
                                [/variable]
                            [/show_if]
                            [command]
                                {VARIABLE menu.cancel_ptr 0}
                                {WBD_INVENTORY_CANCEL_STACK_POP}
                                {VARIABLE menu.level -1}
                            [/command]
                        [/option]
                        image=wesnoth-icon.png
                    [/message]
                [/do]
            [/while]
            {CLEAR_VARIABLE menu,unit_path,current,cancel,paperdoll}
        [/command]
    [/set_menu_item]
    [event]
        name=scenario_end
        [clear_menu_item]
            id=c_manage_inventory
        [/clear_menu_item]
    [/event]
#enddef



#define WBD_ADD_GOLD UNIT LEADER AMOUNT
    #{VARIABLE_OP {UNIT}.variables.personal_gold add {AMOUNT}}
    {IF_VAR {UNIT}.canrecruit equals yes (
        [then]
            {VARIABLE_OP {UNIT}.variables.personal_gold add {AMOUNT}}
            [modify_side]
                side=${UNIT}.side
                gold=${UNIT}.variables.personal_gold
            [/modify_side]
        [/then]
        [else]
            {VARIABLE_OP {LEADER}.variables.personal_gold add {AMOUNT}}
            [modify_side]
                side=${UNIT}.side
                gold=${LEADER}.variables.personal_gold
            [/modify_side]
            [unstore_unit]
                variable={LEADER}
            [/unstore_unit]
        [/else]
    )}
#enddef

#define WBD_INVENTORY_GET_ALL X Y
    [set_variables]
        name=cat_inv_map
        [value]
            melee_weapon="weapons.melee"
            ranged_weapon="weapons.ranged"
            shield="armor.shield"
            head_armor="armor.head"
            torso_armor="armor.torso"
            legs_armor="armor.legs"
            usables="usables"
        [/value]
    [/set_variables]
    [for]
        array=ground.x{X}.y{Y}.items
        variable=i
        reverse=yes
        [do]
            [set_variable]
                name="category"
                value="$ground.x{X}.y{Y}.items[$i].category"
            [/set_variable]
            [switch]
                variable=category
                [case]
                    value=gold
                    {WBD_ADD_GOLD current.unit current.leader $ground.x{X}.y{Y}.items[$i].amount|}
                [/case]
                [else]
                    [if]
                        name=cat_inv_map.$category|
                        not_equals=""
                        [then]
                            [set_variables]
                                name=current.unit.variables.inventory.$cat_inv_map.$category||
                                mode=append
                                [insert_tag]
                                    name=literal
                                    variable=ground.x{X}.y{Y}.items[$i]
                                [/insert_tag]
                            [/set_variables]
                        [/then]
                        [else]
                            {VARIABLE category "unknown"}
                        [/else]
                    [/if]
                [/else]
            [/switch]
            # What is this for?
            {IF_VAR ground.x{X}.y{Y}.items[$i].user_name equals thunderstick (
                [then]
                    [construct_unit]
                        variable=current.unit
                    [/construct_unit]
                [/then]
            )}
        [/do]
    [/for]
    [item_cleanup]
        x={X}
        y={Y}
    [/item_cleanup]
#enddef
