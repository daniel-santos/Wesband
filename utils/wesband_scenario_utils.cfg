#gold to killer
[event]
    name=die
    first_time_only=no
    [if]
        [variable]
            name=unit.personal_gold
            greater_than=0
        [/variable]
        [then]
            {VARIABLE_OP second_unit.personal_gold add $unit.personal_gold}
            [sound]
                name=gold.ogg
            [/sound]
            [unstore_unit]
                variable=second_unit
                text=$unit.personal_gold
                red=255
                green=215
            [/unstore_unit]
            [if]
                [variable]
                    name=second_unit.canrecruit
                    boolean_equals=1
                [/variable]
                [then]
                    [modify_side]
                        side=second_unit.side
                        gold=$second_unit.personal_gold
                    [/modify_side]
                [/then]
            [/if]
        [/then]
    [/if]
[/event]

#find if last enemy, then cleared
[event]
    name=die
    first_time_only=no
	[filter]
		side=4,5,6,7,8,9
	[/filter]
	[if]
		[have_unit]
			side=4,5,6,7,8,9
		[/have_unit]
		[then]
		[/then]
		[else]
			[if]
				[variable]
					name=dungeon_level.current
					greater_than=$dungeon_level.cleared
				[/variable]
				[then]
					{VARIABLE temp_current $dungeon_level.current}
					{VARIABLE_OP temp_current add -1}
					{VARIABLE just_cleared 1}
					[if]
						[variable]
							name=temp_current
							equals=$dungeon_level.cleared
						[/variable]
						[then]
							{VARIABLE dungeon_level.cleared $dungeon_level.current}
							[unstore_unit]
								variable=second_unit
								text="level cleared"
								red=255
								green=215
							[/unstore_unit]
						[/then]
					[/if]
				[/then]
			[/if]
		[/else]
	[/if]
[/event]

#item gain if enemy killed has item and killer is enemy
[event]
    name=die
    first_time_only=no
	[filter]
		side=4,5,6,7,8,9
	[/filter]
	[if]
		[variable]
			name=second_unit.side
			greater_than=3
		[/variable]
		[and]
			[variable]
				name=unit.inventory.length
				greater_than=0
			[/variable]
		[/and]
		[then]
			{FOREACH unit.inventory o}
				{VARIABLE path unit.inventory[$o]}
				[store_unit]
					variable=npc_temp
					[filter]
						x,y=$x2,$y2
					[/filter]
				[/store_unit]
				[fire_event]
					name=eval_npc
				[/fire_event]
				[if]
					[variable]
						name=will_carry
						equals=0
					[/variable]
					[then]
						[item]
							x=$x2
							y=$y2
							image=items/$unit.inventory[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x2|_$y2|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory[$o]
							[/insert_tag]
						[/set_variables]
					[/then]
				[/if]
			{NEXT o}	
		[/then]
	[/if]
	#if killer is on our side
	[if]
		[variable]
			name=second_unit.side
			less_than=4
		[/variable]
		[and]
			[variable]
				name=unit.inventory.length
				greater_than=0
			[/variable]
		[/and]
		[then]
			{FOREACH unit.inventory o}
				[item]
					x=$x1
					y=$y1
					image=items/$unit.inventory[$o].ground_icon|.png
				[/item]
				[set_variables]
					name=ground_$x1|_$y1|.items
					mode=append
					[insert_tag]
						name=literal
						variable=unit.inventory[$o]
					[/insert_tag]
				[/set_variables]
			{NEXT o}	
		[/then]
	[/if]
[/event]

#handle item on levelup
[event]
    name=post_advance
    first_time_only=no
	[filter]
		[not]
			canrecruit=yes
		[/not]
	[/filter]
	#this is probably going to cause troubles later
	{CLEAR_VARIABLE unit.attack}
	[unstore_unit]
		variable=unit
		find_vacant=no
	[/unstore_unit]
[/event]
[event]
    name=post_advance
    first_time_only=no
	[filter]
		[not]
			canrecruit=yes
		[/not]
	[/filter]
	[if]
		[variable]
			name=unit.inventory.length
			greater_than=0
		[/variable]
		[then]
			{FOREACH unit.inventory o}
				{VARIABLE path unit.inventory[$o]}
				[store_unit]
					variable=npc_temp
					[filter]
						x,y=$x1,$y1
					[/filter]
				[/store_unit]
				[fire_event]
					name=eval_npc
				[/fire_event]
				{VARIABLE altered 0}
				[if]
					[variable]
						name=will_carry
						equals=0
					[/variable]
					[then]
						{VARIABLE altered 1}
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory[$o]
							[/insert_tag]
						[/set_variables]
						{CLEAR_VARIABLE $unit.inventory[$o]}
					[/then]
				[/if]
			{NEXT o}	
			[if]
				[variable]
					name=altered
					equals=1
				[/variable]
				[then]
					[unstore_unit]
						variable=unit
						find_vacant=no
					[/unstore_unit]
				[/then]
			[/if]
		[/then]
	[/if]
[/event]
#need something to let NPCs drop older, useless items

#just drop if hench on our side, or drop everything if a player character
[event]
    name=die
    first_time_only=no
	[filter]
		side=1,2,3
	[/filter]
	[if]
		[variable]
			name=unit.canrecruit
			not_equals=yes
		[/variable]
		[then]
			{FOREACH unit.inventory o}
				[item]
					x=$x1
					y=$y1
					image=items/$unit.inventory[$o].ground_icon|.png
				[/item]
				[set_variables]
					name=ground_$x1|_$y1|.items
					mode=append
					[insert_tag]
						name=literal
						variable=unit.inventory[$o]
					[/insert_tag]
				[/set_variables]
			{NEXT o}	
		[/then]
	[/if]
	[if]
		[variable]
			name=unit.canrecruit
			equals=yes
		[/variable]
		[then]
			{FOREACH unit.inventory.weapons.melee o}
				[if]
					[variable]
						name=unit.inventory.weapons.melee[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.weapons.melee[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.weapons.melee[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}	
			{FOREACH unit.inventory.weapons.ranged o}
				[if]
					[variable]
						name=unit.inventory.weapons.ranged[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.weapons.ranged[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.weapons.ranged[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
			{FOREACH unit.inventory.armor.torso o}
				[if]
					[variable]
						name=unit.inventory.armor.torso[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.armor.torso[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.armor.torso[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
			{FOREACH unit.inventory.armor.head o}
				[if]
					[variable]
						name=unit.inventory.armor.head[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.armor.head[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.armor.head[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
			{FOREACH unit.inventory.armor.legs o}
				[if]
					[variable]
						name=unit.inventory.armor.legs[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.armor.legs[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.armor.legs[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
			{FOREACH unit.inventory.armor.shield o}
				[if]
					[variable]
						name=unit.inventory.armor.shield[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.armor.shield[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.armor.shield[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
			{FOREACH unit.inventory.usables o}
				[if]
					[variable]
						name=unit.inventory.usables[$o].undropable
						equals=1
					[/variable]
					[then]
					[/then]
					[else]
						[item]
							x=$x1
							y=$y1
							image=items/$unit.inventory.usables[$o].ground_icon|.png
						[/item]
						[set_variables]
							name=ground_$x1|_$y1|.items
							mode=append
							[insert_tag]
								name=literal
								variable=unit.inventory.usables[$o]
							[/insert_tag]
						[/set_variables]
					[/else]
				[/if]
			{NEXT o}
		[/then]
	[/if]
[/event]

#pick up item if enemy npc moves to it
[event]
    name=moveto
    first_time_only=no
	[allow_undo]
	[/allow_undo]
    [filter]
        side=4,5,6,7,8,9
    [/filter]
    [if]
        [variable]
            name=ground_$x1|_$y1|.items.length
			greater_than=0
        [/variable]
        [then]
			{VARIABLE ground_changed 0}
			{FOREACH ground_$x1|_$y1|.items o}
				{VARIABLE path ground_$x1|_$y1|.items[$o]}
				[store_unit]
					variable=npc_temp
					[filter]
						x,y=$x1,$y1
					[/filter]
				[/store_unit]
				[fire_event]
					name=eval_npc
				[/fire_event]
				[if]
					[variable]
						name=will_carry
						equals=1
					[/variable]
					[then]
						{CLEAR_VARIABLE "ground_$x1|_$y1|.items[$o]"}
                        {VARIABLE ground_changed 1}
					[/then]
				[/if]
			{NEXT o}	
			[if]
                [variable]
                    name=ground_changed
                    equals=1
                [/variable]
                [then]
                    {VARIABLE ground_plus $ground_$x1|_$y1|.items}
                    {VARIABLE_OP ground_plus add 1}
                    {VARIABLE i 0}
                    [while]
                        [variable]
                            name=i
                            less_than=$ground_plus
                        [/variable]
                        [do]
                            [removeitem]
                                x,y=$x1,$y1
                            [/removeitem]
                            [set_variable]
                                name=i
                                add=1
                            [/set_variable]
                        [/do]
                    [/while]
                    {CLEAR_VARIABLE i}
                    [if]
                        [variable]
                            name="ground_$x1|_$y1|.items.length"
                            greater_than=0
                        [/variable]
                        [then]
                            {FOREACH_COLLAPSE ground_$x1|_$y1|.items i}
                            [item]
                                x=$x1
                                y=$y1
                                image=items/$ground_$x1|_$y1|.items[$i].ground_icon|.png
                            [/item]
                            {NEXT_COLLAPSE i}
                        [/then]
                    [/if]
                    {VARIABLE ground_changed 0}
                [/then]
            [/if]
        [/then]
	[/if]
[/event]
#may want way for henches to pick up item

#this makes sure no units have upkeep, really there only because of plague
[event]
	name=post_advance
	first_time_only=no
	[filter]
		[filter_wml]
			[not]
				upkeep=0
			[/not]
		[/filter_wml]
	[/filter]
	{VARIABLE unit.upkeep 0}
	[unstore_unit]
		variable=unit
	[/unstore_unit]	
[/event]


#rest if no enemies near
[event]
	name=side turn
	first_time_only=no
	[store_unit]
		[filter]
			side=$side_number
		[/filter]
		variable=rest_unit
	[/store_unit]
	{FOREACH rest_unit i}
		[if]
			[variable]
				name=side_number
				less_than=4
			[/variable]
			[then]
				[if]
					[have_unit]
						side=4,5,6,7,8,9
						[filter_location]
							x,y=$rest_unit[$i].x,$rest_unit[$i].y
							radius=12
						[/filter_location]
					[/have_unit]
					#not working
					[or]
						[variable]
							name=rest_unit[$i].status.poison
							equals=yes
						[/variable]
					[/or]
					[then]
					[/then]
					[else]
						[if]
							[variable]
								name=rest_unit[$i].hitpoints
								less_than=$rest_unit[$i].max_hitpoints
							[/variable]
							[then]
								[sound]
									name=heal.wav
								[/sound]
								{VARIABLE rest_unit[$i].hitpoints $rest_unit[$i].max_hitpoints}
								[unstore_unit]
									variable=rest_unit[$i]
									text="rested"
									{COLOR_HEAL}
								[/unstore_unit]
							[/then]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
		[if]
			[variable]
				name=side_number
				greater_than=3
			[/variable]
			[then]
				[if]
					[have_unit]
						side=1,2,3
						[filter_location]
							x,y=$rest_unit[$i].x,$rest_unit[$i].y
							radius=12
						[/filter_location]
					[/have_unit]
					[or]
						[variable]
							name=rest_unit[$i].status.poison
							equals=yes
						[/variable]
					[/or]
					[then]
					[/then]
					[else]
						[if]
							[variable]
								name=rest_unit[$i].hitpoints
								less_than=$rest_unit[$i].max_hitpoints
							[/variable]
							[then]
								{VARIABLE rest_unit[$i].hitpoints $rest_unit[$i].max_hitpoints}
								[unstore_unit]
									variable=rest_unit[$i]
									text="rested"
									{COLOR_HEAL}
								[/unstore_unit]
							[/then]
						[/if]
					[/else]
				[/if]
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE rest_unit}
[/event]

#rouse close enemies
[event]
	name=moveto
	first_time_only=no
	[allow_undo]
	[/allow_undo]	
	[filter]
		side=1,2,3
	[/filter]
	[if]
		[have_unit]
			side=4,5,6,7,8,9
			[filter_location]
				x,y=$unit.x,$unit.y
				radius=13
			[/filter_location]
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					side=4,5,6,7,8,9
					[filter_location]
						x,y=$unit.x,$unit.y
						radius=13
					[/filter_location]
				[/filter]
				variable=roused
				kill=no
			[/store_unit]
			{FOREACH roused i}
				{CLEAR_VARIABLE roused[$i].ai_special}
				{CLEAR_VARIABLE roused[$i].status.guardian}
				[unstore_unit]
					variable=roused[$i]
				[/unstore_unit]
			{NEXT i}
		[/then]
	[/if]
[/event]

#refresh movement if no enemies near
[event]
    name=moveto
    first_time_only=no
	[allow_undo]
	[/allow_undo]
    [filter]
        side=1,2,3
    [/filter]
    [if]
        [have_unit]
            side=4,5,6,7,8,9
            [filter_location]
                x,y=$x1,$y1
                radius=15
            [/filter_location]
        [/have_unit]
        [then]
        [/then]
        [else]
            [if]
                [variable]
                    name=unit.simple_action
                    equals=0
                [/variable]
                [or]
                    [variable]
                        name=unit.attacks_left
                        equals=0
                    [/variable]
                [/or]
                [then]
                [/then]
                [else]
                    {VARIABLE unit.moves $unit.max_moves}
                    [unstore_unit]
                        variable=unit
                    [/unstore_unit]
                [/else]
            [/if]
        [/else]
    [/if]
[/event]

#puts real stats into leader units, maybe not needed anymore
[event]
    name=start
	first_time_only=no
    [if]
        [variable]
            name=please_refresh
            equals=1
        [/variable]
        [then]
            [store_unit]
                [filter]
                    side=1
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_1_leader_old
            [/store_unit]
            {VARIABLE side_1_leader.x $side_1_leader_old.x}
            {VARIABLE side_1_leader.y $side_1_leader_old.y}
            {VARIABLE side_1_leader.attacks_left 1}
            {VARIABLE side_1_leader.moves $side_1_leader.max_moves}
            [unstore_unit]
                variable=side_1_leader
            [/unstore_unit]
            {FOREACH side_1_hench i}
                {VARIABLE side_1_hench[$i].x $side_1_leader_old.x}
                {VARIABLE side_1_hench[$i].y $side_1_leader_old.y}
                [unstore_unit]
                    variable=side_1_hench[$i]
                    find_vacant=yes
                [/unstore_unit]
            {NEXT i}
            {CLEAR_VARIABLE side_1_hench}

            [store_unit]
                [filter]
                    side=2
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_2_leader_old
            [/store_unit]
            {VARIABLE side_2_leader.x $side_2_leader_old.x}
            {VARIABLE side_2_leader.y $side_2_leader_old.y}
            {VARIABLE side_2_leader.attacks_left 1}
            {VARIABLE side_2_leader.moves $side_2_leader.max_moves}
            [unstore_unit]
                variable=side_2_leader
            [/unstore_unit]
            {FOREACH side_2_hench i}
                {VARIABLE side_2_hench[$i].x $side_2_leader_old.x}
                {VARIABLE side_2_hench[$i].y $side_2_leader_old.y}
                [unstore_unit]
                    variable=side_2_hench[$i]
                    find_vacant=yes
                [/unstore_unit]
            {NEXT i}

            [store_unit]
                [filter]
                    side=3
                    canrecruit=yes
                [/filter]
                kill=yes
                variable=side_3_leader_old
            [/store_unit]
            {VARIABLE side_3_leader.x $side_3_leader_old.x}
            {VARIABLE side_3_leader.y $side_3_leader_old.y}
            {VARIABLE side_3_leader.attacks_left 1}
            {VARIABLE side_3_leader.moves $side_3_leader.max_moves}
            [unstore_unit]
                variable=side_3_leader
            [/unstore_unit]
            {FOREACH side_3_hench i}
                {VARIABLE side_3_hench[$i].x $side_3_leader_old.x}
                {VARIABLE side_3_hench[$i].y $side_3_leader_old.y}
                [unstore_unit]
                    variable=side_3_hench[$i]
                    find_vacant=yes
                [/unstore_unit]
            {NEXT i}
			
			#need to clear wall/lava/chasm if there's a unit on it
			[store_locations]
				variable=walls
				[filter]
				[/filter]
			[/store_locations]
			{FOREACH walls i}
				[if]
					[variable]
						name=walls[$i].terrain
						equals=Xos
					[/variable]
					[or]
						[variable]
							name=walls[$i].terrain
							equals=Qxu
						[/variable]
					[/or]
					[or]
						[variable]
							name=walls[$i].terrain
							equals=Ql
						[/variable]
					[/or]
					[or]
						[variable]
							name=walls[$i].terrain
							equals=Qlf
						[/variable]
					[/or]
					[or]
						[variable]
							name=walls[$i].terrain
							equals=Xu
						[/variable]
					[/or]
					[then]
						{MODIFY_TERRAIN "Uu" $walls[$i].x $walls[$i].y}
					[/then]
				[/if]
			{NEXT i}

            {CLEAR_VARIABLE side_1_leader}
            {CLEAR_VARIABLE side_1_leader_old}
            {CLEAR_VARIABLE side_2_leader}
            {CLEAR_VARIABLE side_2_leader_old}
            {CLEAR_VARIABLE side_3_leader}
            {CLEAR_VARIABLE side_3_leader_old}

        [/then]
    [/if]
    [redraw]
    [/redraw]
[/event]
	

#define WB_DUNGEON_MUSIC_PLAYLIST
[music]
	name=knolls.ogg
	ms_before=12000
[/music]
[music]
	name=battle.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=transience.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=the_king_is_dead.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=knalgan_theme.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=the_city_falls.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=nunc_dimittis.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=revelation.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=loyalists.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=elvish-theme.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=legends_of_the_north.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=underground.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=vengeful.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=the_dangerous_symphony.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=heroes_rite.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=suspense.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=the_deep_path.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=northerners.ogg
	ms_before=12000
	append=yes
[/music]
[event]
	name=prestart
	[music]
		name=knolls.ogg
		ms_before=12000
[/music]
[music]
		name=battle.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=transience.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=the_king_is_dead.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=knalgan_theme.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=the_city_falls.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=nunc_dimittis.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=revelation.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=loyalists.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=elvish-theme.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=legends_of_the_north.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=underground.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=vengeful.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=the_dangerous_symphony.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=heroes_rite.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=suspense.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=the_deep_path.ogg
		ms_before=12000
		append=yes
[/music]
[music]
		name=northerners.ogg
		ms_before=12000
		append=yes
[/music]
[/event]
#enddef

#define WB_OVERWORLD_MUSIC_PLAYLIST
[music]
	name=wanderer.ogg
	ms_before=12000
[/music]
[music]
	name=breaking_the_chains.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=traveling_minstrels.ogg
	ms_before=12000
	append=yes
[/music]
[music]
	name=sad.ogg
	ms_before=12000
	append=yes
[/music]
[event]
	name=prestart
	[music]
		name=wanderer.ogg
		ms_before=12000
	[/music]
	[music]
		name=breaking_the_chains.ogg
		ms_before=12000
		append=yes
	[/music]
	[music]
		name=traveling_minstrels.ogg
		ms_before=12000
		append=yes
	[/music]
	[music]
		name=sad.ogg
		ms_before=12000
		append=yes
	[/music]
[/event]
#enddef